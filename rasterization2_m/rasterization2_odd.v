// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module rasterization2_odd (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_V_V,
        Input_1_V_V_ap_vld,
        Input_1_V_V_ap_ack,
        Output_1_V_V,
        Output_1_V_V_ap_vld,
        Output_1_V_V_ap_ack,
        Output_2_V_V,
        Output_2_V_V_ap_vld,
        Output_2_V_V_ap_ack
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_pp0_stage0 = 8'd16;
parameter    ap_ST_fsm_state27 = 8'd32;
parameter    ap_ST_fsm_pp1_stage0 = 8'd64;
parameter    ap_ST_fsm_state31 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_V_V;
input   Input_1_V_V_ap_vld;
output   Input_1_V_V_ap_ack;
output  [31:0] Output_1_V_V;
output   Output_1_V_V_ap_vld;
input   Output_1_V_V_ap_ack;
output  [31:0] Output_2_V_V;
output   Output_2_V_V_ap_vld;
input   Output_2_V_V_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Input_1_V_V_ap_ack;
reg[31:0] Output_1_V_V;
reg Output_1_V_V_ap_vld;
reg[31:0] Output_2_V_V;
reg Output_2_V_V_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] rasterization2_m_in_1;
reg   [31:0] rasterization2_m_out_1;
reg   [31:0] rasterization2_m_out_3;
reg   [8:0] fragment_x_V_1_address0;
reg    fragment_x_V_1_ce0;
reg    fragment_x_V_1_we0;
wire   [7:0] fragment_x_V_1_q0;
reg   [8:0] fragment_y_V_address0;
reg    fragment_y_V_ce0;
reg    fragment_y_V_we0;
wire   [7:0] fragment_y_V_q0;
reg   [8:0] fragment_z_V_address0;
reg    fragment_z_V_ce0;
reg    fragment_z_V_we0;
wire   [7:0] fragment_z_V_q0;
reg   [8:0] fragment_color_V_address0;
reg    fragment_color_V_ce0;
reg    fragment_color_V_we0;
wire   [7:0] fragment_color_V_q0;
reg    Input_1_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    Output_1_V_V_blk_n;
reg   [0:0] tmp_8_reg_723;
wire    ap_CS_fsm_state27;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp1_stage0;
reg   [0:0] tmp_21_reg_962;
reg    Output_2_V_V_blk_n;
reg   [15:0] t_V_4_reg_213;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state8_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state10_pp0_stage0_iter5;
wire    ap_block_state11_pp0_stage0_iter6;
wire    ap_block_state12_pp0_stage0_iter7;
wire    ap_block_state13_pp0_stage0_iter8;
wire    ap_block_state14_pp0_stage0_iter9;
wire    ap_block_state15_pp0_stage0_iter10;
wire    ap_block_state16_pp0_stage0_iter11;
wire    ap_block_state17_pp0_stage0_iter12;
wire    ap_block_state18_pp0_stage0_iter13;
wire    ap_block_state19_pp0_stage0_iter14;
wire    ap_block_state20_pp0_stage0_iter15;
wire    ap_block_state21_pp0_stage0_iter16;
wire    ap_block_state22_pp0_stage0_iter17;
wire    ap_block_state23_pp0_stage0_iter18;
wire    ap_block_state24_pp0_stage0_iter19;
wire    ap_block_state25_pp0_stage0_iter20;
wire    ap_block_state26_pp0_stage0_iter21;
wire    ap_block_pp0_stage0_11001;
reg   [15:0] j_reg_225;
reg   [7:0] triangle_2d_same_x0_s_reg_708;
reg    ap_block_state1;
wire   [7:0] grp_fu_246_p4;
reg   [7:0] triangle_2d_same_y0_s_reg_713;
reg   [7:0] triangle_2d_same_x1_s_reg_718;
wire   [0:0] tmp_8_fu_301_p2;
wire   [7:0] triangle_2d_same_y1_s_fu_307_p1;
reg   [7:0] triangle_2d_same_y1_s_reg_727;
reg   [7:0] triangle_2d_same_x2_s_reg_732;
reg   [7:0] triangle_2d_same_y2_s_reg_737;
reg   [7:0] triangle_2d_same_z_V_reg_742;
wire   [15:0] tmp_15_fu_311_p1;
reg   [15:0] tmp_15_reg_747;
reg   [7:0] p_Result_9_reg_752;
wire   [7:0] tmp_16_fu_315_p1;
reg   [7:0] tmp_16_reg_757;
reg    ap_sig_ioackin_Output_1_V_V_ap_ack;
reg    ap_sig_ioackin_Output_2_V_V_ap_ack;
reg    ap_block_state4_io;
reg   [31:0] rasterization2_m_out_5_reg_762;
reg   [31:0] rasterization2_m_out_6_reg_767;
wire   [15:0] tmp_9_cast_fu_345_p1;
reg   [15:0] tmp_9_cast_reg_793;
wire   [8:0] rhs_V_12_fu_349_p1;
reg   [8:0] rhs_V_12_reg_799;
wire   [8:0] lhs_V_14_fu_352_p1;
reg   [8:0] lhs_V_14_reg_804;
wire   [8:0] rhs_V_13_fu_355_p1;
reg   [8:0] rhs_V_13_reg_809;
wire  signed [17:0] rhs_V_2_fu_364_p1;
reg  signed [17:0] rhs_V_2_reg_814;
wire   [8:0] lhs_V_15_fu_368_p1;
reg   [8:0] lhs_V_15_reg_819;
wire  signed [17:0] rhs_V_3_fu_377_p1;
reg  signed [17:0] rhs_V_3_reg_824;
wire   [8:0] lhs_V_16_fu_381_p1;
reg   [8:0] lhs_V_16_reg_829;
wire  signed [17:0] rhs_V_7_fu_390_p1;
reg  signed [17:0] rhs_V_7_reg_834;
wire   [8:0] lhs_V_17_fu_394_p1;
reg   [8:0] lhs_V_17_reg_839;
wire  signed [17:0] rhs_V_8_fu_403_p1;
reg  signed [17:0] rhs_V_8_reg_844;
wire  signed [17:0] rhs_V_4_fu_413_p1;
reg  signed [17:0] rhs_V_4_reg_849;
wire  signed [17:0] rhs_V_fu_423_p1;
reg  signed [17:0] rhs_V_reg_854;
wire   [0:0] exitcond1_fu_442_p2;
reg   [0:0] exitcond1_reg_859;
wire   [15:0] k_V_fu_447_p2;
reg   [15:0] k_V_reg_863;
reg    ap_enable_reg_pp0_iter0;
wire   [7:0] x_V_fu_467_p2;
reg   [7:0] x_V_reg_868;
reg   [7:0] x_V_reg_868_pp0_iter20_reg;
wire   [7:0] y_V_fu_476_p2;
reg   [7:0] y_V_reg_874;
reg   [7:0] y_V_reg_874_pp0_iter20_reg;
wire  signed [17:0] grp_fu_666_p3;
reg  signed [17:0] r_V_7_reg_881;
reg    ap_enable_reg_pp0_iter20;
wire  signed [17:0] grp_fu_672_p3;
reg  signed [17:0] r_V_14_reg_886;
wire  signed [17:0] grp_fu_678_p3;
reg  signed [17:0] r_V_21_reg_891;
wire   [0:0] exitcond_fu_588_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state28_pp1_stage0_iter0;
wire    ap_block_state29_pp1_stage0_iter1;
wire    ap_block_state30_pp1_stage0_iter2;
reg    ap_block_state30_io;
reg    ap_block_pp1_stage0_11001;
wire   [15:0] j_1_fu_594_p2;
reg    ap_enable_reg_pp1_iter0;
reg   [7:0] fragment_x_V_1_load_reg_942;
reg    ap_enable_reg_pp1_iter1;
reg   [7:0] fragment_y_V_load_reg_947;
reg   [7:0] fragment_z_V_load_reg_952;
reg   [7:0] fragment_color_V_loa_reg_957;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter21;
reg    ap_block_state27_io;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state28;
reg   [15:0] ap_phi_mux_t_V_4_phi_fu_217_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] tmp_9_fu_504_p1;
wire   [0:0] tmp_19_fu_496_p3;
wire   [63:0] tmp_6_fu_600_p1;
wire   [31:0] tmp_7_fu_323_p2;
wire   [31:0] grp_fu_266_p2;
wire   [31:0] tmp_10_fu_649_p2;
wire   [31:0] grp_fu_277_p2;
wire   [31:0] tmp_11_fu_629_p2;
reg   [15:0] t_V_2_fu_86;
wire   [15:0] t_V_3_fu_545_p3;
reg   [15:0] t_V_1_fu_90;
wire   [15:0] i_top_V_1_fu_537_p3;
reg   [15:0] t_V_fu_94;
wire   [15:0] i_V_fu_512_p2;
reg   [31:0] rasterization2_m_out_10_fu_98;
reg   [31:0] rasterization2_m_out_9_fu_102;
wire   [31:0] tmp_V_fu_568_p1;
wire   [31:0] p_Result_s_fu_616_p5;
wire    ap_block_pp1_stage0_01001;
reg    ap_reg_ioackin_Output_1_V_V_ap_ack;
wire   [31:0] tmp_V_1_fu_573_p1;
reg    ap_reg_ioackin_Output_2_V_V_ap_ack;
reg   [31:0] grp_fu_266_p0;
reg   [31:0] grp_fu_277_p0;
wire   [1:0] flag_V_fu_297_p1;
wire   [8:0] r_V_3_fu_358_p2;
wire   [8:0] r_V_6_fu_371_p2;
wire   [8:0] r_V_18_fu_384_p2;
wire   [8:0] r_V_10_fu_397_p2;
wire   [8:0] r_V_13_fu_407_p2;
wire   [8:0] r_V_17_fu_417_p2;
wire   [7:0] grp_fu_453_p1;
wire   [7:0] grp_fu_458_p1;
wire   [7:0] grp_fu_453_p2;
wire   [7:0] r_V_fu_463_p1;
wire   [7:0] grp_fu_458_p2;
wire   [7:0] tmp_18_fu_472_p1;
wire  signed [17:0] grp_fu_684_p4;
wire  signed [17:0] grp_fu_692_p4;
wire   [17:0] tmp1_fu_487_p2;
wire  signed [17:0] grp_fu_700_p4;
wire   [17:0] tmp_i_fu_491_p2;
wire   [0:0] tmp_20_fu_518_p3;
wire   [15:0] i_top_V_fu_525_p2;
wire   [15:0] i_bot_V_fu_531_p2;
wire   [7:0] grp_fu_666_p0;
wire   [8:0] lhs_V_3_fu_481_p1;
wire   [7:0] grp_fu_666_p1;
wire  signed [8:0] grp_fu_666_p2;
wire   [7:0] grp_fu_672_p0;
wire   [7:0] grp_fu_672_p1;
wire  signed [8:0] grp_fu_672_p2;
wire   [7:0] grp_fu_678_p0;
wire   [7:0] grp_fu_678_p1;
wire  signed [8:0] grp_fu_678_p2;
wire   [7:0] grp_fu_684_p0;
wire   [8:0] lhs_V_fu_484_p1;
wire   [7:0] grp_fu_684_p1;
wire  signed [8:0] grp_fu_684_p2;
wire   [7:0] grp_fu_692_p0;
wire   [7:0] grp_fu_692_p1;
wire  signed [8:0] grp_fu_692_p2;
wire   [7:0] grp_fu_700_p0;
wire   [7:0] grp_fu_700_p1;
wire  signed [8:0] grp_fu_700_p2;
wire    ap_CS_fsm_state31;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 rasterization2_m_in_1 = 32'd0;
#0 rasterization2_m_out_1 = 32'd0;
#0 rasterization2_m_out_3 = 32'd0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_reg_ioackin_Output_1_V_V_ap_ack = 1'b0;
#0 ap_reg_ioackin_Output_2_V_V_ap_ack = 1'b0;
end

rasterization2_odbkb #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_x_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fragment_x_V_1_address0),
    .ce0(fragment_x_V_1_ce0),
    .we0(fragment_x_V_1_we0),
    .d0(x_V_reg_868_pp0_iter20_reg),
    .q0(fragment_x_V_1_q0)
);

rasterization2_odbkb #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_y_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fragment_y_V_address0),
    .ce0(fragment_y_V_ce0),
    .we0(fragment_y_V_we0),
    .d0(y_V_reg_874_pp0_iter20_reg),
    .q0(fragment_y_V_q0)
);

rasterization2_odbkb #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_z_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fragment_z_V_address0),
    .ce0(fragment_z_V_ce0),
    .we0(fragment_z_V_we0),
    .d0(triangle_2d_same_z_V_reg_742),
    .q0(fragment_z_V_q0)
);

rasterization2_odbkb #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_color_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fragment_color_V_address0),
    .ce0(fragment_color_V_ce0),
    .we0(fragment_color_V_we0),
    .d0(8'd100),
    .q0(fragment_color_V_q0)
);

rasterization2_m_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
rasterization2_m_fYi_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_t_V_4_phi_fu_217_p4),
    .din1(grp_fu_453_p1),
    .ce(1'b1),
    .dout(grp_fu_453_p2)
);

rasterization2_m_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
rasterization2_m_g8j_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_t_V_4_phi_fu_217_p4),
    .din1(grp_fu_458_p1),
    .ce(1'b1),
    .dout(grp_fu_458_p2)
);

rasterization2_m_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
rasterization2_m_hbi_U3(
    .din0(grp_fu_666_p0),
    .din1(grp_fu_666_p1),
    .din2(grp_fu_666_p2),
    .dout(grp_fu_666_p3)
);

rasterization2_m_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
rasterization2_m_hbi_U4(
    .din0(grp_fu_672_p0),
    .din1(grp_fu_672_p1),
    .din2(grp_fu_672_p2),
    .dout(grp_fu_672_p3)
);

rasterization2_m_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
rasterization2_m_hbi_U5(
    .din0(grp_fu_678_p0),
    .din1(grp_fu_678_p1),
    .din2(grp_fu_678_p2),
    .dout(grp_fu_678_p3)
);

rasterization2_m_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
rasterization2_m_ibs_U6(
    .din0(grp_fu_684_p0),
    .din1(grp_fu_684_p1),
    .din2(grp_fu_684_p2),
    .din3(r_V_7_reg_881),
    .dout(grp_fu_684_p4)
);

rasterization2_m_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
rasterization2_m_ibs_U7(
    .din0(grp_fu_692_p0),
    .din1(grp_fu_692_p1),
    .din2(grp_fu_692_p2),
    .din3(r_V_14_reg_886),
    .dout(grp_fu_692_p4)
);

rasterization2_m_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
rasterization2_m_ibs_U8(
    .din0(grp_fu_700_p0),
    .din1(grp_fu_700_p1),
    .din2(grp_fu_700_p2),
    .din3(r_V_21_reg_891),
    .dout(grp_fu_700_p4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((1'b0 == Input_1_V_V_ap_vld) | (1'b1 == ap_block_state4_io)) & (tmp_8_reg_723 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state5)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end else if ((~((1'b0 == Input_1_V_V_ap_vld) | (1'b1 == ap_block_state4_io)) & (tmp_8_reg_723 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter21 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state28) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state28)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state28);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if (((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
    end else begin
        if (((~((1'b0 == Input_1_V_V_ap_vld) | (1'b1 == ap_block_state4_io)) & (tmp_8_reg_723 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_21_reg_962 == 1'd1)) | ((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
        end else if ((((tmp_8_reg_723 == 1'd0) & (1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state4) & (1'b1 == Output_1_V_V_ap_ack)) | ((1'b0 == ap_block_pp1_stage0_01001) & (1'b1 == Output_1_V_V_ap_ack) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_21_reg_962 == 1'd1)) | ((1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state27)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b0;
    end else begin
        if (((~((1'b0 == Input_1_V_V_ap_vld) | (1'b1 == ap_block_state4_io)) & (tmp_8_reg_723 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_21_reg_962 == 1'd0)) | ((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27)))) begin
            ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b0;
        end else if ((((tmp_8_reg_723 == 1'd0) & (1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state4) & (1'b1 == Output_2_V_V_ap_ack)) | ((1'b0 == ap_block_pp1_stage0_01001) & (1'b1 == Output_2_V_V_ap_ack) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_21_reg_962 == 1'd0)) | ((1'b1 == Output_2_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state27)))) begin
            ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_fu_588_p2 == 1'd0))) begin
        j_reg_225 <= j_1_fu_594_p2;
    end else if (((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27))) begin
        j_reg_225 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_21_reg_962 == 1'd1))) begin
        rasterization2_m_out_1 <= tmp_10_fu_649_p2;
    end else if (((~((1'b0 == Input_1_V_V_ap_vld) | (1'b1 == ap_block_state4_io)) & (tmp_8_reg_723 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27)))) begin
        rasterization2_m_out_1 <= grp_fu_266_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_21_reg_962 == 1'd0))) begin
        rasterization2_m_out_10_fu_98 <= tmp_11_fu_629_p2;
    end else if (((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27))) begin
        rasterization2_m_out_10_fu_98 <= grp_fu_277_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_21_reg_962 == 1'd0))) begin
        rasterization2_m_out_3 <= tmp_11_fu_629_p2;
    end else if (((~((1'b0 == Input_1_V_V_ap_vld) | (1'b1 == ap_block_state4_io)) & (tmp_8_reg_723 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27)))) begin
        rasterization2_m_out_3 <= grp_fu_277_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_21_reg_962 == 1'd1))) begin
        rasterization2_m_out_9_fu_102 <= tmp_10_fu_649_p2;
    end else if (((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27))) begin
        rasterization2_m_out_9_fu_102 <= grp_fu_266_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_19_fu_496_p3 == 1'd0))) begin
        t_V_1_fu_90 <= i_top_V_1_fu_537_p3;
    end else if ((~((1'b0 == Input_1_V_V_ap_vld) | (1'b1 == ap_block_state4_io)) & (tmp_8_reg_723 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        t_V_1_fu_90 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_19_fu_496_p3 == 1'd0))) begin
        t_V_2_fu_86 <= t_V_3_fu_545_p3;
    end else if ((~((1'b0 == Input_1_V_V_ap_vld) | (1'b1 == ap_block_state4_io)) & (tmp_8_reg_723 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        t_V_2_fu_86 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (1'b1 == ap_block_state4_io)) & (tmp_8_reg_723 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        t_V_4_reg_213 <= 16'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond1_reg_859 == 1'd0))) begin
        t_V_4_reg_213 <= k_V_reg_863;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_19_fu_496_p3 == 1'd0))) begin
        t_V_fu_94 <= i_V_fu_512_p2;
    end else if ((~((1'b0 == Input_1_V_V_ap_vld) | (1'b1 == ap_block_state4_io)) & (tmp_8_reg_723 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        t_V_fu_94 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond1_reg_859 <= exitcond1_fu_442_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        fragment_color_V_loa_reg_957 <= fragment_color_V_q0;
        fragment_x_V_1_load_reg_942 <= fragment_x_V_1_q0;
        fragment_y_V_load_reg_947 <= fragment_y_V_q0;
        fragment_z_V_load_reg_952 <= fragment_z_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_V_reg_863 <= k_V_fu_447_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (1'b1 == ap_block_state4_io)) & (tmp_8_reg_723 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        lhs_V_14_reg_804[7 : 0] <= lhs_V_14_fu_352_p1[7 : 0];
        lhs_V_15_reg_819[7 : 0] <= lhs_V_15_fu_368_p1[7 : 0];
        lhs_V_16_reg_829[7 : 0] <= lhs_V_16_fu_381_p1[7 : 0];
        lhs_V_17_reg_839[7 : 0] <= lhs_V_17_fu_394_p1[7 : 0];
        rhs_V_12_reg_799[7 : 0] <= rhs_V_12_fu_349_p1[7 : 0];
        rhs_V_13_reg_809[7 : 0] <= rhs_V_13_fu_355_p1[7 : 0];
        rhs_V_2_reg_814 <= rhs_V_2_fu_364_p1;
        rhs_V_3_reg_824 <= rhs_V_3_fu_377_p1;
        rhs_V_4_reg_849 <= rhs_V_4_fu_413_p1;
        rhs_V_7_reg_834 <= rhs_V_7_fu_390_p1;
        rhs_V_8_reg_844 <= rhs_V_8_fu_403_p1;
        rhs_V_reg_854 <= rhs_V_fu_423_p1;
        tmp_9_cast_reg_793[7 : 0] <= tmp_9_cast_fu_345_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state3))) begin
        p_Result_9_reg_752 <= {{Input_1_V_V[23:16]}};
        tmp_15_reg_747 <= tmp_15_fu_311_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_14_reg_886 <= grp_fu_672_p3;
        r_V_21_reg_891 <= grp_fu_678_p3;
        r_V_7_reg_881 <= grp_fu_666_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (1'b1 == ap_block_state4_io)) & (1'b1 == ap_CS_fsm_state4))) begin
        rasterization2_m_in_1 <= tmp_7_fu_323_p2;
        rasterization2_m_out_5_reg_762 <= rasterization2_m_out_1;
        rasterization2_m_out_6_reg_767 <= rasterization2_m_out_3;
        tmp_16_reg_757 <= tmp_16_fu_315_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_21_reg_962 <= fragment_y_V_q0[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_8_reg_723 <= tmp_8_fu_301_p2;
        triangle_2d_same_x0_s_reg_708 <= {{Input_1_V_V[15:8]}};
        triangle_2d_same_x1_s_reg_718 <= {{Input_1_V_V[31:24]}};
        triangle_2d_same_y0_s_reg_713 <= {{Input_1_V_V[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state2))) begin
        triangle_2d_same_x2_s_reg_732 <= {{Input_1_V_V[15:8]}};
        triangle_2d_same_y1_s_reg_727 <= triangle_2d_same_y1_s_fu_307_p1;
        triangle_2d_same_y2_s_reg_737 <= {{Input_1_V_V[23:16]}};
        triangle_2d_same_z_V_reg_742 <= {{Input_1_V_V[31:24]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        x_V_reg_868 <= x_V_fu_467_p2;
        x_V_reg_868_pp0_iter20_reg <= x_V_reg_868;
        y_V_reg_874 <= y_V_fu_476_p2;
        y_V_reg_874_pp0_iter20_reg <= y_V_reg_874;
    end
end

always @ (*) begin
    if (((~((1'b0 == Input_1_V_V_ap_vld) | (1'b1 == ap_block_state4_io)) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state2)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        Input_1_V_V_ap_ack = 1'b1;
    end else begin
        Input_1_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        Input_1_V_V_blk_n = Input_1_V_V_ap_vld;
    end else begin
        Input_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_01001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_21_reg_962 == 1'd1))) begin
        Output_1_V_V = p_Result_s_fu_616_p5;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        Output_1_V_V = tmp_V_fu_568_p1;
    end else if (((tmp_8_reg_723 == 1'd0) & (1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state4))) begin
        Output_1_V_V = 32'd0;
    end else begin
        Output_1_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_8_reg_723 == 1'd0) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state4)) | ((1'b0 == ap_block_pp1_stage0_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_21_reg_962 == 1'd1)) | ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state27)))) begin
        Output_1_V_V_ap_vld = 1'b1;
    end else begin
        Output_1_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | ((tmp_8_reg_723 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_21_reg_962 == 1'd1) & (1'b0 == ap_block_pp1_stage0)))) begin
        Output_1_V_V_blk_n = Output_1_V_V_ap_ack;
    end else begin
        Output_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_01001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_21_reg_962 == 1'd0))) begin
        Output_2_V_V = p_Result_s_fu_616_p5;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        Output_2_V_V = tmp_V_1_fu_573_p1;
    end else if (((tmp_8_reg_723 == 1'd0) & (1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state4))) begin
        Output_2_V_V = 32'd0;
    end else begin
        Output_2_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_8_reg_723 == 1'd0) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state4)) | ((1'b0 == ap_block_pp1_stage0_01001) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_21_reg_962 == 1'd0)) | ((ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state27)))) begin
        Output_2_V_V_ap_vld = 1'b1;
    end else begin
        Output_2_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | ((tmp_8_reg_723 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (tmp_21_reg_962 == 1'd0)))) begin
        Output_2_V_V_blk_n = Output_2_V_V_ap_ack;
    end else begin
        Output_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((exitcond1_fu_442_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_588_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond1_reg_859 == 1'd0))) begin
        ap_phi_mux_t_V_4_phi_fu_217_p4 = k_V_reg_863;
    end else begin
        ap_phi_mux_t_V_4_phi_fu_217_p4 = t_V_4_reg_213;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = Output_1_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_2_V_V_ap_ack = Output_2_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_2_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        fragment_color_V_address0 = tmp_6_fu_600_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        fragment_color_V_address0 = tmp_9_fu_504_p1;
    end else begin
        fragment_color_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        fragment_color_V_ce0 = 1'b1;
    end else begin
        fragment_color_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_19_fu_496_p3 == 1'd0))) begin
        fragment_color_V_we0 = 1'b1;
    end else begin
        fragment_color_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        fragment_x_V_1_address0 = tmp_6_fu_600_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        fragment_x_V_1_address0 = tmp_9_fu_504_p1;
    end else begin
        fragment_x_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        fragment_x_V_1_ce0 = 1'b1;
    end else begin
        fragment_x_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_19_fu_496_p3 == 1'd0))) begin
        fragment_x_V_1_we0 = 1'b1;
    end else begin
        fragment_x_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        fragment_y_V_address0 = tmp_6_fu_600_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        fragment_y_V_address0 = tmp_9_fu_504_p1;
    end else begin
        fragment_y_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        fragment_y_V_ce0 = 1'b1;
    end else begin
        fragment_y_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_19_fu_496_p3 == 1'd0))) begin
        fragment_y_V_we0 = 1'b1;
    end else begin
        fragment_y_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        fragment_z_V_address0 = tmp_6_fu_600_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        fragment_z_V_address0 = tmp_9_fu_504_p1;
    end else begin
        fragment_z_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        fragment_z_V_ce0 = 1'b1;
    end else begin
        fragment_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_19_fu_496_p3 == 1'd0))) begin
        fragment_z_V_we0 = 1'b1;
    end else begin
        fragment_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_266_p0 = rasterization2_m_out_5_reg_762;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_266_p0 = rasterization2_m_out_1;
    end else begin
        grp_fu_266_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_277_p0 = rasterization2_m_out_6_reg_767;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_277_p0 = rasterization2_m_out_3;
    end else begin
        grp_fu_277_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (1'b1 == ap_block_state4_io)) & (tmp_8_reg_723 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((1'b0 == Input_1_V_V_ap_vld) | (1'b1 == ap_block_state4_io)) & (tmp_8_reg_723 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_fu_442_p2 == 1'd1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond1_fu_442_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b0 == ap_block_state27_io) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_fu_588_p2 == 1'd1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_fu_588_p2 == 1'd1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_block_state30_io));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_block_state30_io));
end

always @ (*) begin
    ap_block_state1 = ((1'b0 == Input_1_V_V_ap_vld) | (ap_start == 1'b0));
end

assign ap_block_state10_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state27_io = ((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

assign ap_block_state28_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_io = (((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0) & (tmp_21_reg_962 == 1'd0)) | ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0) & (tmp_21_reg_962 == 1'd1)));
end

assign ap_block_state30_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = (((tmp_8_reg_723 == 1'd0) & (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0)) | ((tmp_8_reg_723 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign exitcond1_fu_442_p2 = ((ap_phi_mux_t_V_4_phi_fu_217_p4 == tmp_15_reg_747) ? 1'b1 : 1'b0);

assign exitcond_fu_588_p2 = ((j_reg_225 == t_V_fu_94) ? 1'b1 : 1'b0);

assign flag_V_fu_297_p1 = Input_1_V_V[1:0];

assign grp_fu_246_p4 = {{Input_1_V_V[23:16]}};

assign grp_fu_266_p2 = (grp_fu_266_p0 + 32'd1);

assign grp_fu_277_p2 = (grp_fu_277_p0 + 32'd1);

assign grp_fu_453_p1 = tmp_9_cast_reg_793;

assign grp_fu_458_p1 = tmp_9_cast_reg_793;

assign grp_fu_666_p0 = lhs_V_3_fu_481_p1;

assign grp_fu_666_p1 = rhs_V_13_reg_809;

assign grp_fu_666_p2 = rhs_V_3_reg_824;

assign grp_fu_672_p0 = lhs_V_3_fu_481_p1;

assign grp_fu_672_p1 = lhs_V_14_reg_804;

assign grp_fu_672_p2 = rhs_V_8_reg_844;

assign grp_fu_678_p0 = lhs_V_3_fu_481_p1;

assign grp_fu_678_p1 = lhs_V_16_reg_829;

assign grp_fu_678_p2 = rhs_V_reg_854;

assign grp_fu_684_p0 = lhs_V_fu_484_p1;

assign grp_fu_684_p1 = rhs_V_12_reg_799;

assign grp_fu_684_p2 = rhs_V_2_reg_814;

assign grp_fu_692_p0 = lhs_V_fu_484_p1;

assign grp_fu_692_p1 = lhs_V_15_reg_819;

assign grp_fu_692_p2 = rhs_V_7_reg_834;

assign grp_fu_700_p0 = lhs_V_fu_484_p1;

assign grp_fu_700_p1 = lhs_V_17_reg_839;

assign grp_fu_700_p2 = rhs_V_4_reg_849;

assign i_V_fu_512_p2 = (t_V_fu_94 + 16'd1);

assign i_bot_V_fu_531_p2 = (t_V_2_fu_86 + 16'd1);

assign i_top_V_1_fu_537_p3 = ((tmp_20_fu_518_p3[0:0] === 1'b1) ? i_top_V_fu_525_p2 : t_V_1_fu_90);

assign i_top_V_fu_525_p2 = (t_V_1_fu_90 + 16'd1);

assign j_1_fu_594_p2 = (j_reg_225 + 16'd1);

assign k_V_fu_447_p2 = (ap_phi_mux_t_V_4_phi_fu_217_p4 + 16'd1);

assign lhs_V_14_fu_352_p1 = triangle_2d_same_y1_s_reg_727;

assign lhs_V_15_fu_368_p1 = triangle_2d_same_x1_s_reg_718;

assign lhs_V_16_fu_381_p1 = triangle_2d_same_y2_s_reg_737;

assign lhs_V_17_fu_394_p1 = triangle_2d_same_x2_s_reg_732;

assign lhs_V_3_fu_481_p1 = y_V_reg_874;

assign lhs_V_fu_484_p1 = x_V_reg_868_pp0_iter20_reg;

assign p_Result_s_fu_616_p5 = {{{{fragment_color_V_loa_reg_957}, {fragment_z_V_load_reg_952}}, {fragment_y_V_load_reg_947}}, {fragment_x_V_1_load_reg_942}};

assign r_V_10_fu_397_p2 = (lhs_V_17_fu_394_p1 - lhs_V_15_fu_368_p1);

assign r_V_13_fu_407_p2 = (rhs_V_13_fu_355_p1 - lhs_V_16_fu_381_p1);

assign r_V_17_fu_417_p2 = (rhs_V_12_fu_349_p1 - lhs_V_17_fu_394_p1);

assign r_V_18_fu_384_p2 = (lhs_V_16_fu_381_p1 - lhs_V_14_fu_352_p1);

assign r_V_3_fu_358_p2 = (lhs_V_14_fu_352_p1 - rhs_V_13_fu_355_p1);

assign r_V_6_fu_371_p2 = (lhs_V_15_fu_368_p1 - rhs_V_12_fu_349_p1);

assign r_V_fu_463_p1 = grp_fu_453_p2[7:0];

assign rhs_V_12_fu_349_p1 = triangle_2d_same_x0_s_reg_708;

assign rhs_V_13_fu_355_p1 = triangle_2d_same_y0_s_reg_713;

assign rhs_V_2_fu_364_p1 = $signed(r_V_3_fu_358_p2);

assign rhs_V_3_fu_377_p1 = $signed(r_V_6_fu_371_p2);

assign rhs_V_4_fu_413_p1 = $signed(r_V_13_fu_407_p2);

assign rhs_V_7_fu_390_p1 = $signed(r_V_18_fu_384_p2);

assign rhs_V_8_fu_403_p1 = $signed(r_V_10_fu_397_p2);

assign rhs_V_fu_423_p1 = $signed(r_V_17_fu_417_p2);

assign t_V_3_fu_545_p3 = ((tmp_20_fu_518_p3[0:0] === 1'b1) ? t_V_2_fu_86 : i_bot_V_fu_531_p2);

assign tmp1_fu_487_p2 = (grp_fu_692_p4 | grp_fu_684_p4);

assign tmp_10_fu_649_p2 = (rasterization2_m_out_9_fu_102 + 32'd1);

assign tmp_11_fu_629_p2 = (rasterization2_m_out_10_fu_98 + 32'd1);

assign tmp_15_fu_311_p1 = Input_1_V_V[15:0];

assign tmp_16_fu_315_p1 = Input_1_V_V[7:0];

assign tmp_18_fu_472_p1 = grp_fu_458_p2[7:0];

assign tmp_19_fu_496_p3 = tmp_i_fu_491_p2[32'd17];

assign tmp_20_fu_518_p3 = y_V_reg_874_pp0_iter20_reg[32'd7];

assign tmp_6_fu_600_p1 = j_reg_225;

assign tmp_7_fu_323_p2 = (32'd4 + rasterization2_m_in_1);

assign tmp_8_fu_301_p2 = ((flag_V_fu_297_p1 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_9_cast_fu_345_p1 = grp_fu_246_p4;

assign tmp_9_fu_504_p1 = t_V_fu_94;

assign tmp_V_1_fu_573_p1 = t_V_2_fu_86;

assign tmp_V_fu_568_p1 = t_V_1_fu_90;

assign tmp_i_fu_491_p2 = (tmp1_fu_487_p2 | grp_fu_700_p4);

assign triangle_2d_same_y1_s_fu_307_p1 = Input_1_V_V[7:0];

assign x_V_fu_467_p2 = (r_V_fu_463_p1 + p_Result_9_reg_752);

assign y_V_fu_476_p2 = (tmp_18_fu_472_p1 + tmp_16_reg_757);

always @ (posedge ap_clk) begin
    tmp_9_cast_reg_793[15:8] <= 8'b00000000;
    rhs_V_12_reg_799[8] <= 1'b0;
    lhs_V_14_reg_804[8] <= 1'b0;
    rhs_V_13_reg_809[8] <= 1'b0;
    lhs_V_15_reg_819[8] <= 1'b0;
    lhs_V_16_reg_829[8] <= 1'b0;
    lhs_V_17_reg_839[8] <= 1'b0;
end

endmodule //rasterization2_odd
