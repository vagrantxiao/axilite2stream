// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="coloringFB_bot_m,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.121500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=16,HLS_SYN_DSP=0,HLS_SYN_FF=436,HLS_SYN_LUT=3510,HLS_VERSION=2018_2}" *)

module coloringFB_bot_m (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_V_V,
        Input_1_V_V_ap_vld,
        Input_1_V_V_ap_ack,
        Output_1_V_V,
        Output_1_V_V_ap_vld,
        Output_1_V_V_ap_ack
);

parameter    ap_ST_fsm_state1 = 72'd1;
parameter    ap_ST_fsm_state2 = 72'd2;
parameter    ap_ST_fsm_state3 = 72'd4;
parameter    ap_ST_fsm_state4 = 72'd8;
parameter    ap_ST_fsm_state5 = 72'd16;
parameter    ap_ST_fsm_state6 = 72'd32;
parameter    ap_ST_fsm_state7 = 72'd64;
parameter    ap_ST_fsm_state8 = 72'd128;
parameter    ap_ST_fsm_state9 = 72'd256;
parameter    ap_ST_fsm_state10 = 72'd512;
parameter    ap_ST_fsm_state11 = 72'd1024;
parameter    ap_ST_fsm_state12 = 72'd2048;
parameter    ap_ST_fsm_state13 = 72'd4096;
parameter    ap_ST_fsm_state14 = 72'd8192;
parameter    ap_ST_fsm_state15 = 72'd16384;
parameter    ap_ST_fsm_state16 = 72'd32768;
parameter    ap_ST_fsm_state17 = 72'd65536;
parameter    ap_ST_fsm_state18 = 72'd131072;
parameter    ap_ST_fsm_state19 = 72'd262144;
parameter    ap_ST_fsm_state20 = 72'd524288;
parameter    ap_ST_fsm_state21 = 72'd1048576;
parameter    ap_ST_fsm_state22 = 72'd2097152;
parameter    ap_ST_fsm_state23 = 72'd4194304;
parameter    ap_ST_fsm_state24 = 72'd8388608;
parameter    ap_ST_fsm_state25 = 72'd16777216;
parameter    ap_ST_fsm_state26 = 72'd33554432;
parameter    ap_ST_fsm_state27 = 72'd67108864;
parameter    ap_ST_fsm_state28 = 72'd134217728;
parameter    ap_ST_fsm_state29 = 72'd268435456;
parameter    ap_ST_fsm_state30 = 72'd536870912;
parameter    ap_ST_fsm_state31 = 72'd1073741824;
parameter    ap_ST_fsm_state32 = 72'd2147483648;
parameter    ap_ST_fsm_state33 = 72'd4294967296;
parameter    ap_ST_fsm_state34 = 72'd8589934592;
parameter    ap_ST_fsm_state35 = 72'd17179869184;
parameter    ap_ST_fsm_state36 = 72'd34359738368;
parameter    ap_ST_fsm_state37 = 72'd68719476736;
parameter    ap_ST_fsm_state38 = 72'd137438953472;
parameter    ap_ST_fsm_state39 = 72'd274877906944;
parameter    ap_ST_fsm_state40 = 72'd549755813888;
parameter    ap_ST_fsm_state41 = 72'd1099511627776;
parameter    ap_ST_fsm_state42 = 72'd2199023255552;
parameter    ap_ST_fsm_state43 = 72'd4398046511104;
parameter    ap_ST_fsm_state44 = 72'd8796093022208;
parameter    ap_ST_fsm_state45 = 72'd17592186044416;
parameter    ap_ST_fsm_state46 = 72'd35184372088832;
parameter    ap_ST_fsm_state47 = 72'd70368744177664;
parameter    ap_ST_fsm_state48 = 72'd140737488355328;
parameter    ap_ST_fsm_state49 = 72'd281474976710656;
parameter    ap_ST_fsm_state50 = 72'd562949953421312;
parameter    ap_ST_fsm_state51 = 72'd1125899906842624;
parameter    ap_ST_fsm_state52 = 72'd2251799813685248;
parameter    ap_ST_fsm_state53 = 72'd4503599627370496;
parameter    ap_ST_fsm_state54 = 72'd9007199254740992;
parameter    ap_ST_fsm_state55 = 72'd18014398509481984;
parameter    ap_ST_fsm_state56 = 72'd36028797018963968;
parameter    ap_ST_fsm_state57 = 72'd72057594037927936;
parameter    ap_ST_fsm_state58 = 72'd144115188075855872;
parameter    ap_ST_fsm_state59 = 72'd288230376151711744;
parameter    ap_ST_fsm_state60 = 72'd576460752303423488;
parameter    ap_ST_fsm_state61 = 72'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 72'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 72'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 72'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 72'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 72'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 72'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 72'd147573952589676412928;
parameter    ap_ST_fsm_pp2_stage0 = 72'd295147905179352825856;
parameter    ap_ST_fsm_pp2_stage1 = 72'd590295810358705651712;
parameter    ap_ST_fsm_state72 = 72'd1180591620717411303424;
parameter    ap_ST_fsm_state73 = 72'd2361183241434822606848;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_V_V;
input   Input_1_V_V_ap_vld;
output   Input_1_V_V_ap_ack;
output  [31:0] Output_1_V_V;
output   Output_1_V_V_ap_vld;
input   Output_1_V_V_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Input_1_V_V_ap_ack;
reg Output_1_V_V_ap_vld;

(* fsm_encoding = "none" *) reg   [71:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] coloringFB_bot_m_in_s;
reg   [15:0] counter_V;
reg   [14:0] frame_buffer_V_address0;
reg    frame_buffer_V_ce0;
reg    frame_buffer_V_we0;
reg   [7:0] frame_buffer_V_d0;
wire   [7:0] frame_buffer_V_q0;
reg   [14:0] frame_buffer_V_address1;
reg    frame_buffer_V_ce1;
reg    frame_buffer_V_we1;
wire   [7:0] frame_buffer_V_q1;
reg   [31:0] coloringFB_bot_m_out;
reg    Input_1_V_V_blk_n;
wire    ap_CS_fsm_state67;
wire   [0:0] exitcond1_fu_3354_p2;
reg    Output_1_V_V_blk_n;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] exitcond_flatten_reg_3788;
reg   [13:0] indvar_flatten_reg_1477;
reg   [8:0] i_reg_1488;
reg   [7:0] j_reg_1499;
reg   [31:0] tmp_V_reg_3604;
reg    ap_block_state1;
wire   [31:0] tmp_3_fu_1525_p2;
reg   [31:0] tmp_3_reg_3609;
reg   [15:0] t_V_1_reg_3614;
wire   [0:0] tmp_4_fu_1541_p2;
wire   [8:0] i_V_fu_1553_p2;
reg   [8:0] i_V_reg_3626;
wire    ap_CS_fsm_state2;
wire   [15:0] tmp_6_fu_1559_p3;
reg   [15:0] tmp_6_reg_3631;
wire   [0:0] tmp_5_fu_1547_p2;
wire   [15:0] tmp_265_fu_3351_p1;
reg   [15:0] tmp_265_reg_3761;
wire    ap_CS_fsm_state66;
wire   [15:0] i_V_1_fu_3359_p2;
reg    ap_block_state67;
wire   [31:0] tmp_s_fu_3365_p2;
wire   [15:0] tmp_2_fu_3429_p2;
wire    ap_CS_fsm_state68;
wire   [0:0] tmp_9_fu_3434_p2;
wire   [0:0] exitcond_flatten_fu_3440_p2;
wire    ap_block_state69_pp2_stage0_iter0;
wire    ap_block_state71_pp2_stage0_iter1;
reg    ap_sig_ioackin_Output_1_V_V_ap_ack;
reg    ap_block_state71_io;
reg    ap_block_pp2_stage0_11001;
wire   [13:0] indvar_flatten_next_fu_3446_p2;
reg   [13:0] indvar_flatten_next_reg_3792;
reg    ap_enable_reg_pp2_iter0;
wire   [7:0] j_mid2_fu_3466_p3;
reg   [7:0] j_mid2_reg_3797;
wire   [8:0] tmp_11_mid2_v_fu_3474_p3;
reg   [8:0] tmp_11_mid2_v_reg_3802;
wire   [6:0] tmp_272_fu_3494_p1;
reg   [6:0] tmp_272_reg_3809;
reg   [7:0] frame_buffer_V_load_reg_3825;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state70_pp2_stage1_iter0;
wire    ap_block_pp2_stage1_11001;
reg   [7:0] frame_buffer_V_load_1_reg_3830;
wire   [7:0] j_1_fu_3566_p2;
reg   [7:0] j_1_reg_3845;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state69;
wire    ap_block_pp2_stage1_subdone;
reg   [8:0] t_V_reg_1446;
wire    ap_CS_fsm_state65;
reg   [31:0] coloringFB_bot_m_in_2_reg_1457;
reg   [15:0] t_V_2_reg_1466;
reg   [13:0] ap_phi_mux_indvar_flatten_phi_fu_1481_p4;
reg   [8:0] ap_phi_mux_i_phi_fu_1492_p4;
reg   [7:0] ap_phi_mux_j_phi_fu_1503_p4;
reg   [15:0] counter_V_new_reg_1510;
wire    ap_CS_fsm_state72;
wire   [63:0] tmp_7_fu_1567_p1;
wire   [63:0] tmp_10_fu_1578_p3;
wire   [63:0] tmp_12_fu_1592_p3;
wire    ap_CS_fsm_state3;
wire   [63:0] tmp_16_fu_1606_p3;
wire   [63:0] tmp_18_fu_1620_p3;
wire    ap_CS_fsm_state4;
wire   [63:0] tmp_20_fu_1634_p3;
wire   [63:0] tmp_22_fu_1648_p3;
wire    ap_CS_fsm_state5;
wire   [63:0] tmp_24_fu_1662_p3;
wire   [63:0] tmp_26_fu_1676_p3;
wire    ap_CS_fsm_state6;
wire   [63:0] tmp_28_fu_1690_p3;
wire   [63:0] tmp_30_fu_1704_p3;
wire    ap_CS_fsm_state7;
wire   [63:0] tmp_32_fu_1718_p3;
wire   [63:0] tmp_34_fu_1732_p3;
wire    ap_CS_fsm_state8;
wire   [63:0] tmp_36_fu_1746_p3;
wire   [63:0] tmp_38_fu_1760_p3;
wire    ap_CS_fsm_state9;
wire   [63:0] tmp_40_fu_1774_p3;
wire   [63:0] tmp_42_fu_1788_p3;
wire    ap_CS_fsm_state10;
wire   [63:0] tmp_44_fu_1802_p3;
wire   [63:0] tmp_46_fu_1816_p3;
wire    ap_CS_fsm_state11;
wire   [63:0] tmp_48_fu_1830_p3;
wire   [63:0] tmp_50_fu_1844_p3;
wire    ap_CS_fsm_state12;
wire   [63:0] tmp_52_fu_1858_p3;
wire   [63:0] tmp_54_fu_1872_p3;
wire    ap_CS_fsm_state13;
wire   [63:0] tmp_56_fu_1886_p3;
wire   [63:0] tmp_58_fu_1900_p3;
wire    ap_CS_fsm_state14;
wire   [63:0] tmp_60_fu_1914_p3;
wire   [63:0] tmp_62_fu_1928_p3;
wire    ap_CS_fsm_state15;
wire   [63:0] tmp_64_fu_1942_p3;
wire   [63:0] tmp_66_fu_1956_p3;
wire    ap_CS_fsm_state16;
wire   [63:0] tmp_68_fu_1970_p3;
wire   [63:0] tmp_70_fu_1984_p3;
wire    ap_CS_fsm_state17;
wire   [63:0] tmp_72_fu_1998_p3;
wire   [63:0] tmp_74_fu_2012_p3;
wire    ap_CS_fsm_state18;
wire   [63:0] tmp_76_fu_2026_p3;
wire   [63:0] tmp_78_fu_2040_p3;
wire    ap_CS_fsm_state19;
wire   [63:0] tmp_80_fu_2054_p3;
wire   [63:0] tmp_82_fu_2068_p3;
wire    ap_CS_fsm_state20;
wire   [63:0] tmp_84_fu_2082_p3;
wire   [63:0] tmp_86_fu_2096_p3;
wire    ap_CS_fsm_state21;
wire   [63:0] tmp_88_fu_2110_p3;
wire   [63:0] tmp_90_fu_2124_p3;
wire    ap_CS_fsm_state22;
wire   [63:0] tmp_92_fu_2138_p3;
wire   [63:0] tmp_94_fu_2152_p3;
wire    ap_CS_fsm_state23;
wire   [63:0] tmp_96_fu_2166_p3;
wire   [63:0] tmp_98_fu_2180_p3;
wire    ap_CS_fsm_state24;
wire   [63:0] tmp_100_fu_2194_p3;
wire   [63:0] tmp_102_fu_2208_p3;
wire    ap_CS_fsm_state25;
wire   [63:0] tmp_104_fu_2222_p3;
wire   [63:0] tmp_106_fu_2236_p3;
wire    ap_CS_fsm_state26;
wire   [63:0] tmp_108_fu_2250_p3;
wire   [63:0] tmp_110_fu_2264_p3;
wire    ap_CS_fsm_state27;
wire   [63:0] tmp_112_fu_2278_p3;
wire   [63:0] tmp_114_fu_2292_p3;
wire    ap_CS_fsm_state28;
wire   [63:0] tmp_116_fu_2306_p3;
wire   [63:0] tmp_118_fu_2320_p3;
wire    ap_CS_fsm_state29;
wire   [63:0] tmp_120_fu_2334_p3;
wire   [63:0] tmp_122_fu_2348_p3;
wire    ap_CS_fsm_state30;
wire   [63:0] tmp_124_fu_2362_p3;
wire   [63:0] tmp_126_fu_2376_p3;
wire    ap_CS_fsm_state31;
wire   [63:0] tmp_128_fu_2390_p3;
wire   [63:0] tmp_130_fu_2404_p3;
wire    ap_CS_fsm_state32;
wire   [63:0] tmp_132_fu_2418_p3;
wire   [63:0] tmp_134_fu_2432_p3;
wire    ap_CS_fsm_state33;
wire   [63:0] tmp_136_fu_2446_p3;
wire   [63:0] tmp_138_fu_2460_p3;
wire    ap_CS_fsm_state34;
wire   [63:0] tmp_140_fu_2474_p3;
wire   [63:0] tmp_142_fu_2488_p3;
wire    ap_CS_fsm_state35;
wire   [63:0] tmp_144_fu_2502_p3;
wire   [63:0] tmp_146_fu_2516_p3;
wire    ap_CS_fsm_state36;
wire   [63:0] tmp_148_fu_2530_p3;
wire   [63:0] tmp_150_fu_2544_p3;
wire    ap_CS_fsm_state37;
wire   [63:0] tmp_152_fu_2558_p3;
wire   [63:0] tmp_154_fu_2572_p3;
wire    ap_CS_fsm_state38;
wire   [63:0] tmp_156_fu_2586_p3;
wire   [63:0] tmp_158_fu_2600_p3;
wire    ap_CS_fsm_state39;
wire   [63:0] tmp_160_fu_2614_p3;
wire   [63:0] tmp_162_fu_2628_p3;
wire    ap_CS_fsm_state40;
wire   [63:0] tmp_164_fu_2642_p3;
wire   [63:0] tmp_166_fu_2656_p3;
wire    ap_CS_fsm_state41;
wire   [63:0] tmp_168_fu_2670_p3;
wire   [63:0] tmp_170_fu_2684_p3;
wire    ap_CS_fsm_state42;
wire   [63:0] tmp_172_fu_2698_p3;
wire   [63:0] tmp_174_fu_2712_p3;
wire    ap_CS_fsm_state43;
wire   [63:0] tmp_176_fu_2726_p3;
wire   [63:0] tmp_178_fu_2740_p3;
wire    ap_CS_fsm_state44;
wire   [63:0] tmp_180_fu_2754_p3;
wire   [63:0] tmp_182_fu_2768_p3;
wire    ap_CS_fsm_state45;
wire   [63:0] tmp_184_fu_2782_p3;
wire   [63:0] tmp_186_fu_2796_p3;
wire    ap_CS_fsm_state46;
wire   [63:0] tmp_188_fu_2810_p3;
wire   [63:0] tmp_190_fu_2824_p3;
wire    ap_CS_fsm_state47;
wire   [63:0] tmp_192_fu_2838_p3;
wire   [63:0] tmp_194_fu_2852_p3;
wire    ap_CS_fsm_state48;
wire   [63:0] tmp_196_fu_2866_p3;
wire   [63:0] tmp_198_fu_2880_p3;
wire    ap_CS_fsm_state49;
wire   [63:0] tmp_200_fu_2894_p3;
wire   [63:0] tmp_202_fu_2908_p3;
wire    ap_CS_fsm_state50;
wire   [63:0] tmp_204_fu_2922_p3;
wire   [63:0] tmp_206_fu_2936_p3;
wire    ap_CS_fsm_state51;
wire   [63:0] tmp_208_fu_2950_p3;
wire   [63:0] tmp_210_fu_2964_p3;
wire    ap_CS_fsm_state52;
wire   [63:0] tmp_212_fu_2978_p3;
wire   [63:0] tmp_214_fu_2992_p3;
wire    ap_CS_fsm_state53;
wire   [63:0] tmp_216_fu_3006_p3;
wire   [63:0] tmp_218_fu_3020_p3;
wire    ap_CS_fsm_state54;
wire   [63:0] tmp_220_fu_3034_p3;
wire   [63:0] tmp_222_fu_3048_p3;
wire    ap_CS_fsm_state55;
wire   [63:0] tmp_224_fu_3062_p3;
wire   [63:0] tmp_226_fu_3076_p3;
wire    ap_CS_fsm_state56;
wire   [63:0] tmp_228_fu_3090_p3;
wire   [63:0] tmp_230_fu_3104_p3;
wire    ap_CS_fsm_state57;
wire   [63:0] tmp_232_fu_3118_p3;
wire   [63:0] tmp_234_fu_3132_p3;
wire    ap_CS_fsm_state58;
wire   [63:0] tmp_236_fu_3146_p3;
wire   [63:0] tmp_238_fu_3160_p3;
wire    ap_CS_fsm_state59;
wire   [63:0] tmp_240_fu_3174_p3;
wire   [63:0] tmp_242_fu_3188_p3;
wire    ap_CS_fsm_state60;
wire   [63:0] tmp_244_fu_3202_p3;
wire   [63:0] tmp_246_fu_3216_p3;
wire    ap_CS_fsm_state61;
wire   [63:0] tmp_248_fu_3230_p3;
wire   [63:0] tmp_250_fu_3244_p3;
wire    ap_CS_fsm_state62;
wire   [63:0] tmp_252_fu_3258_p3;
wire   [63:0] tmp_254_fu_3272_p3;
wire    ap_CS_fsm_state63;
wire   [63:0] tmp_256_fu_3286_p3;
wire   [63:0] tmp_258_fu_3300_p3;
wire    ap_CS_fsm_state64;
wire   [63:0] tmp_260_fu_3314_p3;
wire   [63:0] tmp_262_fu_3328_p3;
wire   [63:0] tmp_264_fu_3342_p3;
wire   [63:0] tmp_272_cast_fu_3424_p1;
wire   [63:0] tmp_275_cast_fu_3508_p1;
wire   [63:0] tmp_275_fu_3527_p1;
wire   [63:0] tmp_277_fu_3544_p1;
wire    ap_block_pp2_stage1;
wire   [63:0] tmp_279_fu_3561_p1;
wire    ap_CS_fsm_state73;
wire   [31:0] tmp_14_fu_3586_p2;
wire    ap_block_pp2_stage0_01001;
reg    ap_reg_ioackin_Output_1_V_V_ap_ack;
wire   [15:0] tmp_8_fu_1572_p2;
wire   [15:0] tmp_11_fu_1587_p2;
wire   [15:0] tmp_15_fu_1601_p2;
wire   [15:0] tmp_17_fu_1615_p2;
wire   [15:0] tmp_19_fu_1629_p2;
wire   [15:0] tmp_21_fu_1643_p2;
wire   [15:0] tmp_23_fu_1657_p2;
wire   [15:0] tmp_25_fu_1671_p2;
wire   [15:0] tmp_27_fu_1685_p2;
wire   [15:0] tmp_29_fu_1699_p2;
wire   [15:0] tmp_31_fu_1713_p2;
wire   [15:0] tmp_33_fu_1727_p2;
wire   [15:0] tmp_35_fu_1741_p2;
wire   [15:0] tmp_37_fu_1755_p2;
wire   [15:0] tmp_39_fu_1769_p2;
wire   [15:0] tmp_41_fu_1783_p2;
wire   [15:0] tmp_43_fu_1797_p2;
wire   [15:0] tmp_45_fu_1811_p2;
wire   [15:0] tmp_47_fu_1825_p2;
wire   [15:0] tmp_49_fu_1839_p2;
wire   [15:0] tmp_51_fu_1853_p2;
wire   [15:0] tmp_53_fu_1867_p2;
wire   [15:0] tmp_55_fu_1881_p2;
wire   [15:0] tmp_57_fu_1895_p2;
wire   [15:0] tmp_59_fu_1909_p2;
wire   [15:0] tmp_61_fu_1923_p2;
wire   [15:0] tmp_63_fu_1937_p2;
wire   [15:0] tmp_65_fu_1951_p2;
wire   [15:0] tmp_67_fu_1965_p2;
wire   [15:0] tmp_69_fu_1979_p2;
wire   [15:0] tmp_71_fu_1993_p2;
wire   [15:0] tmp_73_fu_2007_p2;
wire   [15:0] tmp_75_fu_2021_p2;
wire   [15:0] tmp_77_fu_2035_p2;
wire   [15:0] tmp_79_fu_2049_p2;
wire   [15:0] tmp_81_fu_2063_p2;
wire   [15:0] tmp_83_fu_2077_p2;
wire   [15:0] tmp_85_fu_2091_p2;
wire   [15:0] tmp_87_fu_2105_p2;
wire   [15:0] tmp_89_fu_2119_p2;
wire   [15:0] tmp_91_fu_2133_p2;
wire   [15:0] tmp_93_fu_2147_p2;
wire   [15:0] tmp_95_fu_2161_p2;
wire   [15:0] tmp_97_fu_2175_p2;
wire   [15:0] tmp_99_fu_2189_p2;
wire   [15:0] tmp_101_fu_2203_p2;
wire   [15:0] tmp_103_fu_2217_p2;
wire   [15:0] tmp_105_fu_2231_p2;
wire   [15:0] tmp_107_fu_2245_p2;
wire   [15:0] tmp_109_fu_2259_p2;
wire   [15:0] tmp_111_fu_2273_p2;
wire   [15:0] tmp_113_fu_2287_p2;
wire   [15:0] tmp_115_fu_2301_p2;
wire   [15:0] tmp_117_fu_2315_p2;
wire   [15:0] tmp_119_fu_2329_p2;
wire   [15:0] tmp_121_fu_2343_p2;
wire   [15:0] tmp_123_fu_2357_p2;
wire   [15:0] tmp_125_fu_2371_p2;
wire   [15:0] tmp_127_fu_2385_p2;
wire   [15:0] tmp_129_fu_2399_p2;
wire   [15:0] tmp_131_fu_2413_p2;
wire   [15:0] tmp_133_fu_2427_p2;
wire   [15:0] tmp_135_fu_2441_p2;
wire   [15:0] tmp_137_fu_2455_p2;
wire   [15:0] tmp_139_fu_2469_p2;
wire   [15:0] tmp_141_fu_2483_p2;
wire   [15:0] tmp_143_fu_2497_p2;
wire   [15:0] tmp_145_fu_2511_p2;
wire   [15:0] tmp_147_fu_2525_p2;
wire   [15:0] tmp_149_fu_2539_p2;
wire   [15:0] tmp_151_fu_2553_p2;
wire   [15:0] tmp_153_fu_2567_p2;
wire   [15:0] tmp_155_fu_2581_p2;
wire   [15:0] tmp_157_fu_2595_p2;
wire   [15:0] tmp_159_fu_2609_p2;
wire   [15:0] tmp_161_fu_2623_p2;
wire   [15:0] tmp_163_fu_2637_p2;
wire   [15:0] tmp_165_fu_2651_p2;
wire   [15:0] tmp_167_fu_2665_p2;
wire   [15:0] tmp_169_fu_2679_p2;
wire   [15:0] tmp_171_fu_2693_p2;
wire   [15:0] tmp_173_fu_2707_p2;
wire   [15:0] tmp_175_fu_2721_p2;
wire   [15:0] tmp_177_fu_2735_p2;
wire   [15:0] tmp_179_fu_2749_p2;
wire   [15:0] tmp_181_fu_2763_p2;
wire   [15:0] tmp_183_fu_2777_p2;
wire   [15:0] tmp_185_fu_2791_p2;
wire   [15:0] tmp_187_fu_2805_p2;
wire   [15:0] tmp_189_fu_2819_p2;
wire   [15:0] tmp_191_fu_2833_p2;
wire   [15:0] tmp_193_fu_2847_p2;
wire   [15:0] tmp_195_fu_2861_p2;
wire   [15:0] tmp_197_fu_2875_p2;
wire   [15:0] tmp_199_fu_2889_p2;
wire   [15:0] tmp_201_fu_2903_p2;
wire   [15:0] tmp_203_fu_2917_p2;
wire   [15:0] tmp_205_fu_2931_p2;
wire   [15:0] tmp_207_fu_2945_p2;
wire   [15:0] tmp_209_fu_2959_p2;
wire   [15:0] tmp_211_fu_2973_p2;
wire   [15:0] tmp_213_fu_2987_p2;
wire   [15:0] tmp_215_fu_3001_p2;
wire   [15:0] tmp_217_fu_3015_p2;
wire   [15:0] tmp_219_fu_3029_p2;
wire   [15:0] tmp_221_fu_3043_p2;
wire   [15:0] tmp_223_fu_3057_p2;
wire   [15:0] tmp_225_fu_3071_p2;
wire   [15:0] tmp_227_fu_3085_p2;
wire   [15:0] tmp_229_fu_3099_p2;
wire   [15:0] tmp_231_fu_3113_p2;
wire   [15:0] tmp_233_fu_3127_p2;
wire   [15:0] tmp_235_fu_3141_p2;
wire   [15:0] tmp_237_fu_3155_p2;
wire   [15:0] tmp_239_fu_3169_p2;
wire   [15:0] tmp_241_fu_3183_p2;
wire   [15:0] tmp_243_fu_3197_p2;
wire   [15:0] tmp_245_fu_3211_p2;
wire   [15:0] tmp_247_fu_3225_p2;
wire   [15:0] tmp_249_fu_3239_p2;
wire   [15:0] tmp_251_fu_3253_p2;
wire   [15:0] tmp_253_fu_3267_p2;
wire   [15:0] tmp_255_fu_3281_p2;
wire   [15:0] tmp_257_fu_3295_p2;
wire   [15:0] tmp_259_fu_3309_p2;
wire   [15:0] tmp_261_fu_3323_p2;
wire   [15:0] tmp_263_fu_3337_p2;
wire   [7:0] tmp_266_fu_3388_p4;
wire   [7:0] tmp_267_fu_3402_p1;
wire   [14:0] tmp_268_fu_3406_p3;
wire   [15:0] tmp_271_cast_fu_3414_p1;
wire   [15:0] tmp_8_cast_fu_3398_p1;
wire   [15:0] tmp_269_fu_3418_p2;
wire   [0:0] tmp_270_fu_3458_p3;
wire   [8:0] i_1_fu_3452_p2;
wire   [15:0] tmp_271_fu_3482_p3;
wire   [16:0] tmp_274_cast_fu_3490_p1;
wire   [16:0] tmp_15_cast_fu_3498_p1;
wire   [16:0] tmp_273_fu_3502_p2;
wire   [6:0] tmp_16_s_fu_3513_p2;
wire   [15:0] tmp_274_fu_3519_p3;
wire   [6:0] tmp_16_1_fu_3532_p2;
wire   [15:0] tmp_276_fu_3537_p3;
wire   [6:0] tmp_16_2_fu_3549_p2;
wire   [15:0] tmp_278_fu_3554_p3;
reg   [71:0] ap_NS_fsm;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_condition_2574;

// power-on initialization
initial begin
#0 ap_CS_fsm = 72'd1;
#0 coloringFB_bot_m_in_s = 32'd0;
#0 counter_V = 16'd0;
#0 coloringFB_bot_m_out = 32'd0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_reg_ioackin_Output_1_V_V_ap_ack = 1'b0;
end

coloringFB_bot_m_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 32768 ),
    .AddressWidth( 15 ))
frame_buffer_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(frame_buffer_V_address0),
    .ce0(frame_buffer_V_ce0),
    .we0(frame_buffer_V_we0),
    .d0(frame_buffer_V_d0),
    .q0(frame_buffer_V_q0),
    .address1(frame_buffer_V_address1),
    .ce1(frame_buffer_V_ce1),
    .we1(frame_buffer_V_we1),
    .d1(8'd0),
    .q1(frame_buffer_V_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state69) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((tmp_9_fu_3434_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state68))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state69) & (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0))))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state69);
        end else if ((((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((tmp_9_fu_3434_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state68))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_2574)) begin
            if ((1'b0 == ap_block_pp2_stage0_11001)) begin
                ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
            end else if (((1'b0 == ap_block_pp2_stage0_01001) & (1'b1 == Output_1_V_V_ap_ack))) begin
                ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_3354_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state67) & (exitcond1_fu_3354_p2 == 1'd0))) begin
        coloringFB_bot_m_in_2_reg_1457 <= tmp_s_fu_3365_p2;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        coloringFB_bot_m_in_2_reg_1457 <= tmp_3_reg_3609;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_3354_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state67) & (exitcond1_fu_3354_p2 == 1'd0))) begin
        coloringFB_bot_m_in_s <= tmp_s_fu_3365_p2;
    end else if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        coloringFB_bot_m_in_s <= tmp_3_fu_1525_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        counter_V_new_reg_1510 <= 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state68) & (tmp_9_fu_3434_p2 == 1'd0))) begin
        counter_V_new_reg_1510 <= tmp_2_fu_3429_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_fu_3434_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state68))) begin
        i_reg_1488 <= 9'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_3788 == 1'd0))) begin
        i_reg_1488 <= tmp_11_mid2_v_reg_3802;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_fu_3434_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state68))) begin
        indvar_flatten_reg_1477 <= 14'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_3788 == 1'd0))) begin
        indvar_flatten_reg_1477 <= indvar_flatten_next_reg_3792;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_fu_3434_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state68))) begin
        j_reg_1499 <= 8'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_3788 == 1'd0))) begin
        j_reg_1499 <= j_1_reg_3845;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_3354_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state67) & (exitcond1_fu_3354_p2 == 1'd0))) begin
        t_V_2_reg_1466 <= i_V_1_fu_3359_p2;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        t_V_2_reg_1466 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (tmp_4_fu_1541_p2 == 1'd1))) begin
        t_V_reg_1446 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        t_V_reg_1446 <= i_V_reg_3626;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_3788 == 1'd0))) begin
        coloringFB_bot_m_out <= tmp_14_fu_3586_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        counter_V <= counter_V_new_reg_1510;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond_flatten_reg_3788 <= exitcond_flatten_fu_3440_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond_flatten_reg_3788 == 1'd0))) begin
        frame_buffer_V_load_1_reg_3830 <= frame_buffer_V_q0;
        frame_buffer_V_load_reg_3825 <= frame_buffer_V_q1;
        j_1_reg_3845 <= j_1_fu_3566_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_3626 <= i_V_fu_1553_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten_next_reg_3792 <= indvar_flatten_next_fu_3446_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_fu_3440_p2 == 1'd0))) begin
        j_mid2_reg_3797 <= j_mid2_fu_3466_p3;
        tmp_272_reg_3809 <= tmp_272_fu_3494_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_1_reg_3614 <= counter_V;
        tmp_3_reg_3609 <= tmp_3_fu_1525_p2;
        tmp_V_reg_3604 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_fu_3440_p2 == 1'd0))) begin
        tmp_11_mid2_v_reg_3802 <= tmp_11_mid2_v_fu_3474_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        tmp_265_reg_3761 <= tmp_265_fu_3351_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_5_fu_1547_p2 == 1'd0))) begin
        tmp_6_reg_3631[15 : 7] <= tmp_6_fu_1559_p3[15 : 7];
    end
end

always @ (*) begin
    if (((~((1'b0 == Input_1_V_V_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | (~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_3354_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state67) & (exitcond1_fu_3354_p2 == 1'd0)))) begin
        Input_1_V_V_ap_ack = 1'b1;
    end else begin
        Input_1_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state67) & (exitcond1_fu_3354_p2 == 1'd0)))) begin
        Input_1_V_V_blk_n = Input_1_V_V_ap_vld;
    end else begin
        Input_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_3788 == 1'd0))) begin
        Output_1_V_V_ap_vld = 1'b1;
    end else begin
        Output_1_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0) & (exitcond_flatten_reg_3788 == 1'd0))) begin
        Output_1_V_V_blk_n = Output_1_V_V_ap_ack;
    end else begin
        Output_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_3440_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state69 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state69 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0) & (exitcond_flatten_reg_3788 == 1'd0))) begin
        ap_phi_mux_i_phi_fu_1492_p4 = tmp_11_mid2_v_reg_3802;
    end else begin
        ap_phi_mux_i_phi_fu_1492_p4 = i_reg_1488;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0) & (exitcond_flatten_reg_3788 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_1481_p4 = indvar_flatten_next_reg_3792;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_1481_p4 = indvar_flatten_reg_1477;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0) & (exitcond_flatten_reg_3788 == 1'd0))) begin
        ap_phi_mux_j_phi_fu_1503_p4 = j_1_reg_3845;
    end else begin
        ap_phi_mux_j_phi_fu_1503_p4 = j_reg_1499;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = Output_1_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        frame_buffer_V_address0 = tmp_279_fu_3561_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        frame_buffer_V_address0 = tmp_275_fu_3527_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        frame_buffer_V_address0 = tmp_272_cast_fu_3424_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        frame_buffer_V_address0 = tmp_262_fu_3328_p3;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        frame_buffer_V_address0 = tmp_258_fu_3300_p3;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        frame_buffer_V_address0 = tmp_254_fu_3272_p3;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        frame_buffer_V_address0 = tmp_250_fu_3244_p3;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        frame_buffer_V_address0 = tmp_246_fu_3216_p3;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        frame_buffer_V_address0 = tmp_242_fu_3188_p3;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        frame_buffer_V_address0 = tmp_238_fu_3160_p3;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        frame_buffer_V_address0 = tmp_234_fu_3132_p3;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        frame_buffer_V_address0 = tmp_230_fu_3104_p3;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        frame_buffer_V_address0 = tmp_226_fu_3076_p3;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        frame_buffer_V_address0 = tmp_222_fu_3048_p3;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        frame_buffer_V_address0 = tmp_218_fu_3020_p3;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        frame_buffer_V_address0 = tmp_214_fu_2992_p3;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        frame_buffer_V_address0 = tmp_210_fu_2964_p3;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        frame_buffer_V_address0 = tmp_206_fu_2936_p3;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        frame_buffer_V_address0 = tmp_202_fu_2908_p3;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        frame_buffer_V_address0 = tmp_198_fu_2880_p3;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        frame_buffer_V_address0 = tmp_194_fu_2852_p3;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        frame_buffer_V_address0 = tmp_190_fu_2824_p3;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        frame_buffer_V_address0 = tmp_186_fu_2796_p3;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        frame_buffer_V_address0 = tmp_182_fu_2768_p3;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        frame_buffer_V_address0 = tmp_178_fu_2740_p3;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        frame_buffer_V_address0 = tmp_174_fu_2712_p3;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        frame_buffer_V_address0 = tmp_170_fu_2684_p3;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        frame_buffer_V_address0 = tmp_166_fu_2656_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        frame_buffer_V_address0 = tmp_162_fu_2628_p3;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        frame_buffer_V_address0 = tmp_158_fu_2600_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        frame_buffer_V_address0 = tmp_154_fu_2572_p3;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        frame_buffer_V_address0 = tmp_150_fu_2544_p3;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        frame_buffer_V_address0 = tmp_146_fu_2516_p3;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        frame_buffer_V_address0 = tmp_142_fu_2488_p3;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        frame_buffer_V_address0 = tmp_138_fu_2460_p3;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        frame_buffer_V_address0 = tmp_134_fu_2432_p3;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        frame_buffer_V_address0 = tmp_130_fu_2404_p3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        frame_buffer_V_address0 = tmp_126_fu_2376_p3;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        frame_buffer_V_address0 = tmp_122_fu_2348_p3;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        frame_buffer_V_address0 = tmp_118_fu_2320_p3;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        frame_buffer_V_address0 = tmp_114_fu_2292_p3;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        frame_buffer_V_address0 = tmp_110_fu_2264_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        frame_buffer_V_address0 = tmp_106_fu_2236_p3;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        frame_buffer_V_address0 = tmp_102_fu_2208_p3;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        frame_buffer_V_address0 = tmp_98_fu_2180_p3;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        frame_buffer_V_address0 = tmp_94_fu_2152_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        frame_buffer_V_address0 = tmp_90_fu_2124_p3;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        frame_buffer_V_address0 = tmp_86_fu_2096_p3;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        frame_buffer_V_address0 = tmp_82_fu_2068_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        frame_buffer_V_address0 = tmp_78_fu_2040_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        frame_buffer_V_address0 = tmp_74_fu_2012_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        frame_buffer_V_address0 = tmp_70_fu_1984_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        frame_buffer_V_address0 = tmp_66_fu_1956_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        frame_buffer_V_address0 = tmp_62_fu_1928_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        frame_buffer_V_address0 = tmp_58_fu_1900_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        frame_buffer_V_address0 = tmp_54_fu_1872_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        frame_buffer_V_address0 = tmp_50_fu_1844_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        frame_buffer_V_address0 = tmp_46_fu_1816_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        frame_buffer_V_address0 = tmp_42_fu_1788_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        frame_buffer_V_address0 = tmp_38_fu_1760_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_address0 = tmp_34_fu_1732_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_address0 = tmp_30_fu_1704_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_address0 = tmp_26_fu_1676_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_address0 = tmp_22_fu_1648_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_address0 = tmp_18_fu_1620_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_address0 = tmp_12_fu_1592_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_address0 = tmp_7_fu_1567_p1;
    end else begin
        frame_buffer_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        frame_buffer_V_address1 = tmp_277_fu_3544_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        frame_buffer_V_address1 = tmp_275_cast_fu_3508_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        frame_buffer_V_address1 = tmp_264_fu_3342_p3;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        frame_buffer_V_address1 = tmp_260_fu_3314_p3;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        frame_buffer_V_address1 = tmp_256_fu_3286_p3;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        frame_buffer_V_address1 = tmp_252_fu_3258_p3;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        frame_buffer_V_address1 = tmp_248_fu_3230_p3;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        frame_buffer_V_address1 = tmp_244_fu_3202_p3;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        frame_buffer_V_address1 = tmp_240_fu_3174_p3;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        frame_buffer_V_address1 = tmp_236_fu_3146_p3;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        frame_buffer_V_address1 = tmp_232_fu_3118_p3;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        frame_buffer_V_address1 = tmp_228_fu_3090_p3;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        frame_buffer_V_address1 = tmp_224_fu_3062_p3;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        frame_buffer_V_address1 = tmp_220_fu_3034_p3;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        frame_buffer_V_address1 = tmp_216_fu_3006_p3;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        frame_buffer_V_address1 = tmp_212_fu_2978_p3;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        frame_buffer_V_address1 = tmp_208_fu_2950_p3;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        frame_buffer_V_address1 = tmp_204_fu_2922_p3;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        frame_buffer_V_address1 = tmp_200_fu_2894_p3;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        frame_buffer_V_address1 = tmp_196_fu_2866_p3;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        frame_buffer_V_address1 = tmp_192_fu_2838_p3;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        frame_buffer_V_address1 = tmp_188_fu_2810_p3;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        frame_buffer_V_address1 = tmp_184_fu_2782_p3;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        frame_buffer_V_address1 = tmp_180_fu_2754_p3;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        frame_buffer_V_address1 = tmp_176_fu_2726_p3;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        frame_buffer_V_address1 = tmp_172_fu_2698_p3;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        frame_buffer_V_address1 = tmp_168_fu_2670_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        frame_buffer_V_address1 = tmp_164_fu_2642_p3;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        frame_buffer_V_address1 = tmp_160_fu_2614_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        frame_buffer_V_address1 = tmp_156_fu_2586_p3;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        frame_buffer_V_address1 = tmp_152_fu_2558_p3;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        frame_buffer_V_address1 = tmp_148_fu_2530_p3;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        frame_buffer_V_address1 = tmp_144_fu_2502_p3;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        frame_buffer_V_address1 = tmp_140_fu_2474_p3;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        frame_buffer_V_address1 = tmp_136_fu_2446_p3;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        frame_buffer_V_address1 = tmp_132_fu_2418_p3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        frame_buffer_V_address1 = tmp_128_fu_2390_p3;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        frame_buffer_V_address1 = tmp_124_fu_2362_p3;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        frame_buffer_V_address1 = tmp_120_fu_2334_p3;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        frame_buffer_V_address1 = tmp_116_fu_2306_p3;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        frame_buffer_V_address1 = tmp_112_fu_2278_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        frame_buffer_V_address1 = tmp_108_fu_2250_p3;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        frame_buffer_V_address1 = tmp_104_fu_2222_p3;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        frame_buffer_V_address1 = tmp_100_fu_2194_p3;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        frame_buffer_V_address1 = tmp_96_fu_2166_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        frame_buffer_V_address1 = tmp_92_fu_2138_p3;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        frame_buffer_V_address1 = tmp_88_fu_2110_p3;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        frame_buffer_V_address1 = tmp_84_fu_2082_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        frame_buffer_V_address1 = tmp_80_fu_2054_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        frame_buffer_V_address1 = tmp_76_fu_2026_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        frame_buffer_V_address1 = tmp_72_fu_1998_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        frame_buffer_V_address1 = tmp_68_fu_1970_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        frame_buffer_V_address1 = tmp_64_fu_1942_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        frame_buffer_V_address1 = tmp_60_fu_1914_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        frame_buffer_V_address1 = tmp_56_fu_1886_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        frame_buffer_V_address1 = tmp_52_fu_1858_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        frame_buffer_V_address1 = tmp_48_fu_1830_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        frame_buffer_V_address1 = tmp_44_fu_1802_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        frame_buffer_V_address1 = tmp_40_fu_1774_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_address1 = tmp_36_fu_1746_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_address1 = tmp_32_fu_1718_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_address1 = tmp_28_fu_1690_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_address1 = tmp_24_fu_1662_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_address1 = tmp_20_fu_1634_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_address1 = tmp_16_fu_1606_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_address1 = tmp_10_fu_1578_p3;
    end else begin
        frame_buffer_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | (~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_3354_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state67)))) begin
        frame_buffer_V_ce0 = 1'b1;
    end else begin
        frame_buffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        frame_buffer_V_ce1 = 1'b1;
    end else begin
        frame_buffer_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        frame_buffer_V_d0 = {{Input_1_V_V[23:16]}};
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state2))) begin
        frame_buffer_V_d0 = 8'd0;
    end else begin
        frame_buffer_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state65) | ((1'b1 == ap_CS_fsm_state2) & (tmp_5_fu_1547_p2 == 1'd0)) | (~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_3354_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state67) & (exitcond1_fu_3354_p2 == 1'd0)))) begin
        frame_buffer_V_we0 = 1'b1;
    end else begin
        frame_buffer_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state65) | ((1'b1 == ap_CS_fsm_state2) & (tmp_5_fu_1547_p2 == 1'd0)))) begin
        frame_buffer_V_we1 = 1'b1;
    end else begin
        frame_buffer_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (tmp_4_fu_1541_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (tmp_4_fu_1541_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_5_fu_1547_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_3354_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state67) & (exitcond1_fu_3354_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_3354_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state67) & (exitcond1_fu_3354_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state68 : begin
            if (((tmp_9_fu_3434_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state68))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (exitcond_flatten_fu_3440_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (exitcond_flatten_fu_3440_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Output_1_V_V = {{{{frame_buffer_V_q0}, {frame_buffer_V_q1}}, {frame_buffer_V_load_1_reg_3830}}, {frame_buffer_V_load_reg_3825}};

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((1'b1 == ap_block_state71_io) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((1'b1 == ap_block_state71_io) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((1'b0 == Input_1_V_V_ap_vld) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state67 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_3354_p2 == 1'd0));
end

assign ap_block_state69_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state71_io = ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0) & (exitcond_flatten_reg_3788 == 1'd0));
end

assign ap_block_state71_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_2574 = ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_3788 == 1'd0));
end

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign exitcond1_fu_3354_p2 = ((t_V_2_reg_1466 == tmp_265_reg_3761) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_3440_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_1481_p4 == 14'd8192) ? 1'b1 : 1'b0);

assign i_1_fu_3452_p2 = (9'd1 + ap_phi_mux_i_phi_fu_1492_p4);

assign i_V_1_fu_3359_p2 = (t_V_2_reg_1466 + 16'd1);

assign i_V_fu_1553_p2 = (t_V_reg_1446 + 9'd1);

assign indvar_flatten_next_fu_3446_p2 = (ap_phi_mux_indvar_flatten_phi_fu_1481_p4 + 14'd1);

assign j_1_fu_3566_p2 = (8'd4 + j_mid2_reg_3797);

assign j_mid2_fu_3466_p3 = ((tmp_270_fu_3458_p3[0:0] === 1'b1) ? 8'd0 : ap_phi_mux_j_phi_fu_1503_p4);

assign tmp_100_fu_2194_p3 = {{48'd0}, {tmp_99_fu_2189_p2}};

assign tmp_101_fu_2203_p2 = (tmp_6_reg_3631 | 16'd46);

assign tmp_102_fu_2208_p3 = {{48'd0}, {tmp_101_fu_2203_p2}};

assign tmp_103_fu_2217_p2 = (tmp_6_reg_3631 | 16'd47);

assign tmp_104_fu_2222_p3 = {{48'd0}, {tmp_103_fu_2217_p2}};

assign tmp_105_fu_2231_p2 = (tmp_6_reg_3631 | 16'd48);

assign tmp_106_fu_2236_p3 = {{48'd0}, {tmp_105_fu_2231_p2}};

assign tmp_107_fu_2245_p2 = (tmp_6_reg_3631 | 16'd49);

assign tmp_108_fu_2250_p3 = {{48'd0}, {tmp_107_fu_2245_p2}};

assign tmp_109_fu_2259_p2 = (tmp_6_reg_3631 | 16'd50);

assign tmp_10_fu_1578_p3 = {{48'd0}, {tmp_8_fu_1572_p2}};

assign tmp_110_fu_2264_p3 = {{48'd0}, {tmp_109_fu_2259_p2}};

assign tmp_111_fu_2273_p2 = (tmp_6_reg_3631 | 16'd51);

assign tmp_112_fu_2278_p3 = {{48'd0}, {tmp_111_fu_2273_p2}};

assign tmp_113_fu_2287_p2 = (tmp_6_reg_3631 | 16'd52);

assign tmp_114_fu_2292_p3 = {{48'd0}, {tmp_113_fu_2287_p2}};

assign tmp_115_fu_2301_p2 = (tmp_6_reg_3631 | 16'd53);

assign tmp_116_fu_2306_p3 = {{48'd0}, {tmp_115_fu_2301_p2}};

assign tmp_117_fu_2315_p2 = (tmp_6_reg_3631 | 16'd54);

assign tmp_118_fu_2320_p3 = {{48'd0}, {tmp_117_fu_2315_p2}};

assign tmp_119_fu_2329_p2 = (tmp_6_reg_3631 | 16'd55);

assign tmp_11_fu_1587_p2 = (tmp_6_reg_3631 | 16'd2);

assign tmp_11_mid2_v_fu_3474_p3 = ((tmp_270_fu_3458_p3[0:0] === 1'b1) ? i_1_fu_3452_p2 : ap_phi_mux_i_phi_fu_1492_p4);

assign tmp_120_fu_2334_p3 = {{48'd0}, {tmp_119_fu_2329_p2}};

assign tmp_121_fu_2343_p2 = (tmp_6_reg_3631 | 16'd56);

assign tmp_122_fu_2348_p3 = {{48'd0}, {tmp_121_fu_2343_p2}};

assign tmp_123_fu_2357_p2 = (tmp_6_reg_3631 | 16'd57);

assign tmp_124_fu_2362_p3 = {{48'd0}, {tmp_123_fu_2357_p2}};

assign tmp_125_fu_2371_p2 = (tmp_6_reg_3631 | 16'd58);

assign tmp_126_fu_2376_p3 = {{48'd0}, {tmp_125_fu_2371_p2}};

assign tmp_127_fu_2385_p2 = (tmp_6_reg_3631 | 16'd59);

assign tmp_128_fu_2390_p3 = {{48'd0}, {tmp_127_fu_2385_p2}};

assign tmp_129_fu_2399_p2 = (tmp_6_reg_3631 | 16'd60);

assign tmp_12_fu_1592_p3 = {{48'd0}, {tmp_11_fu_1587_p2}};

assign tmp_130_fu_2404_p3 = {{48'd0}, {tmp_129_fu_2399_p2}};

assign tmp_131_fu_2413_p2 = (tmp_6_reg_3631 | 16'd61);

assign tmp_132_fu_2418_p3 = {{48'd0}, {tmp_131_fu_2413_p2}};

assign tmp_133_fu_2427_p2 = (tmp_6_reg_3631 | 16'd62);

assign tmp_134_fu_2432_p3 = {{48'd0}, {tmp_133_fu_2427_p2}};

assign tmp_135_fu_2441_p2 = (tmp_6_reg_3631 | 16'd63);

assign tmp_136_fu_2446_p3 = {{48'd0}, {tmp_135_fu_2441_p2}};

assign tmp_137_fu_2455_p2 = (tmp_6_reg_3631 | 16'd64);

assign tmp_138_fu_2460_p3 = {{48'd0}, {tmp_137_fu_2455_p2}};

assign tmp_139_fu_2469_p2 = (tmp_6_reg_3631 | 16'd65);

assign tmp_140_fu_2474_p3 = {{48'd0}, {tmp_139_fu_2469_p2}};

assign tmp_141_fu_2483_p2 = (tmp_6_reg_3631 | 16'd66);

assign tmp_142_fu_2488_p3 = {{48'd0}, {tmp_141_fu_2483_p2}};

assign tmp_143_fu_2497_p2 = (tmp_6_reg_3631 | 16'd67);

assign tmp_144_fu_2502_p3 = {{48'd0}, {tmp_143_fu_2497_p2}};

assign tmp_145_fu_2511_p2 = (tmp_6_reg_3631 | 16'd68);

assign tmp_146_fu_2516_p3 = {{48'd0}, {tmp_145_fu_2511_p2}};

assign tmp_147_fu_2525_p2 = (tmp_6_reg_3631 | 16'd69);

assign tmp_148_fu_2530_p3 = {{48'd0}, {tmp_147_fu_2525_p2}};

assign tmp_149_fu_2539_p2 = (tmp_6_reg_3631 | 16'd70);

assign tmp_14_fu_3586_p2 = (32'd1 + coloringFB_bot_m_out);

assign tmp_150_fu_2544_p3 = {{48'd0}, {tmp_149_fu_2539_p2}};

assign tmp_151_fu_2553_p2 = (tmp_6_reg_3631 | 16'd71);

assign tmp_152_fu_2558_p3 = {{48'd0}, {tmp_151_fu_2553_p2}};

assign tmp_153_fu_2567_p2 = (tmp_6_reg_3631 | 16'd72);

assign tmp_154_fu_2572_p3 = {{48'd0}, {tmp_153_fu_2567_p2}};

assign tmp_155_fu_2581_p2 = (tmp_6_reg_3631 | 16'd73);

assign tmp_156_fu_2586_p3 = {{48'd0}, {tmp_155_fu_2581_p2}};

assign tmp_157_fu_2595_p2 = (tmp_6_reg_3631 | 16'd74);

assign tmp_158_fu_2600_p3 = {{48'd0}, {tmp_157_fu_2595_p2}};

assign tmp_159_fu_2609_p2 = (tmp_6_reg_3631 | 16'd75);

assign tmp_15_cast_fu_3498_p1 = j_mid2_fu_3466_p3;

assign tmp_15_fu_1601_p2 = (tmp_6_reg_3631 | 16'd3);

assign tmp_160_fu_2614_p3 = {{48'd0}, {tmp_159_fu_2609_p2}};

assign tmp_161_fu_2623_p2 = (tmp_6_reg_3631 | 16'd76);

assign tmp_162_fu_2628_p3 = {{48'd0}, {tmp_161_fu_2623_p2}};

assign tmp_163_fu_2637_p2 = (tmp_6_reg_3631 | 16'd77);

assign tmp_164_fu_2642_p3 = {{48'd0}, {tmp_163_fu_2637_p2}};

assign tmp_165_fu_2651_p2 = (tmp_6_reg_3631 | 16'd78);

assign tmp_166_fu_2656_p3 = {{48'd0}, {tmp_165_fu_2651_p2}};

assign tmp_167_fu_2665_p2 = (tmp_6_reg_3631 | 16'd79);

assign tmp_168_fu_2670_p3 = {{48'd0}, {tmp_167_fu_2665_p2}};

assign tmp_169_fu_2679_p2 = (tmp_6_reg_3631 | 16'd80);

assign tmp_16_1_fu_3532_p2 = (tmp_272_reg_3809 | 7'd2);

assign tmp_16_2_fu_3549_p2 = (tmp_272_reg_3809 | 7'd3);

assign tmp_16_fu_1606_p3 = {{48'd0}, {tmp_15_fu_1601_p2}};

assign tmp_16_s_fu_3513_p2 = (tmp_272_fu_3494_p1 | 7'd1);

assign tmp_170_fu_2684_p3 = {{48'd0}, {tmp_169_fu_2679_p2}};

assign tmp_171_fu_2693_p2 = (tmp_6_reg_3631 | 16'd81);

assign tmp_172_fu_2698_p3 = {{48'd0}, {tmp_171_fu_2693_p2}};

assign tmp_173_fu_2707_p2 = (tmp_6_reg_3631 | 16'd82);

assign tmp_174_fu_2712_p3 = {{48'd0}, {tmp_173_fu_2707_p2}};

assign tmp_175_fu_2721_p2 = (tmp_6_reg_3631 | 16'd83);

assign tmp_176_fu_2726_p3 = {{48'd0}, {tmp_175_fu_2721_p2}};

assign tmp_177_fu_2735_p2 = (tmp_6_reg_3631 | 16'd84);

assign tmp_178_fu_2740_p3 = {{48'd0}, {tmp_177_fu_2735_p2}};

assign tmp_179_fu_2749_p2 = (tmp_6_reg_3631 | 16'd85);

assign tmp_17_fu_1615_p2 = (tmp_6_reg_3631 | 16'd4);

assign tmp_180_fu_2754_p3 = {{48'd0}, {tmp_179_fu_2749_p2}};

assign tmp_181_fu_2763_p2 = (tmp_6_reg_3631 | 16'd86);

assign tmp_182_fu_2768_p3 = {{48'd0}, {tmp_181_fu_2763_p2}};

assign tmp_183_fu_2777_p2 = (tmp_6_reg_3631 | 16'd87);

assign tmp_184_fu_2782_p3 = {{48'd0}, {tmp_183_fu_2777_p2}};

assign tmp_185_fu_2791_p2 = (tmp_6_reg_3631 | 16'd88);

assign tmp_186_fu_2796_p3 = {{48'd0}, {tmp_185_fu_2791_p2}};

assign tmp_187_fu_2805_p2 = (tmp_6_reg_3631 | 16'd89);

assign tmp_188_fu_2810_p3 = {{48'd0}, {tmp_187_fu_2805_p2}};

assign tmp_189_fu_2819_p2 = (tmp_6_reg_3631 | 16'd90);

assign tmp_18_fu_1620_p3 = {{48'd0}, {tmp_17_fu_1615_p2}};

assign tmp_190_fu_2824_p3 = {{48'd0}, {tmp_189_fu_2819_p2}};

assign tmp_191_fu_2833_p2 = (tmp_6_reg_3631 | 16'd91);

assign tmp_192_fu_2838_p3 = {{48'd0}, {tmp_191_fu_2833_p2}};

assign tmp_193_fu_2847_p2 = (tmp_6_reg_3631 | 16'd92);

assign tmp_194_fu_2852_p3 = {{48'd0}, {tmp_193_fu_2847_p2}};

assign tmp_195_fu_2861_p2 = (tmp_6_reg_3631 | 16'd93);

assign tmp_196_fu_2866_p3 = {{48'd0}, {tmp_195_fu_2861_p2}};

assign tmp_197_fu_2875_p2 = (tmp_6_reg_3631 | 16'd94);

assign tmp_198_fu_2880_p3 = {{48'd0}, {tmp_197_fu_2875_p2}};

assign tmp_199_fu_2889_p2 = (tmp_6_reg_3631 | 16'd95);

assign tmp_19_fu_1629_p2 = (tmp_6_reg_3631 | 16'd5);

assign tmp_200_fu_2894_p3 = {{48'd0}, {tmp_199_fu_2889_p2}};

assign tmp_201_fu_2903_p2 = (tmp_6_reg_3631 | 16'd96);

assign tmp_202_fu_2908_p3 = {{48'd0}, {tmp_201_fu_2903_p2}};

assign tmp_203_fu_2917_p2 = (tmp_6_reg_3631 | 16'd97);

assign tmp_204_fu_2922_p3 = {{48'd0}, {tmp_203_fu_2917_p2}};

assign tmp_205_fu_2931_p2 = (tmp_6_reg_3631 | 16'd98);

assign tmp_206_fu_2936_p3 = {{48'd0}, {tmp_205_fu_2931_p2}};

assign tmp_207_fu_2945_p2 = (tmp_6_reg_3631 | 16'd99);

assign tmp_208_fu_2950_p3 = {{48'd0}, {tmp_207_fu_2945_p2}};

assign tmp_209_fu_2959_p2 = (tmp_6_reg_3631 | 16'd100);

assign tmp_20_fu_1634_p3 = {{48'd0}, {tmp_19_fu_1629_p2}};

assign tmp_210_fu_2964_p3 = {{48'd0}, {tmp_209_fu_2959_p2}};

assign tmp_211_fu_2973_p2 = (tmp_6_reg_3631 | 16'd101);

assign tmp_212_fu_2978_p3 = {{48'd0}, {tmp_211_fu_2973_p2}};

assign tmp_213_fu_2987_p2 = (tmp_6_reg_3631 | 16'd102);

assign tmp_214_fu_2992_p3 = {{48'd0}, {tmp_213_fu_2987_p2}};

assign tmp_215_fu_3001_p2 = (tmp_6_reg_3631 | 16'd103);

assign tmp_216_fu_3006_p3 = {{48'd0}, {tmp_215_fu_3001_p2}};

assign tmp_217_fu_3015_p2 = (tmp_6_reg_3631 | 16'd104);

assign tmp_218_fu_3020_p3 = {{48'd0}, {tmp_217_fu_3015_p2}};

assign tmp_219_fu_3029_p2 = (tmp_6_reg_3631 | 16'd105);

assign tmp_21_fu_1643_p2 = (tmp_6_reg_3631 | 16'd6);

assign tmp_220_fu_3034_p3 = {{48'd0}, {tmp_219_fu_3029_p2}};

assign tmp_221_fu_3043_p2 = (tmp_6_reg_3631 | 16'd106);

assign tmp_222_fu_3048_p3 = {{48'd0}, {tmp_221_fu_3043_p2}};

assign tmp_223_fu_3057_p2 = (tmp_6_reg_3631 | 16'd107);

assign tmp_224_fu_3062_p3 = {{48'd0}, {tmp_223_fu_3057_p2}};

assign tmp_225_fu_3071_p2 = (tmp_6_reg_3631 | 16'd108);

assign tmp_226_fu_3076_p3 = {{48'd0}, {tmp_225_fu_3071_p2}};

assign tmp_227_fu_3085_p2 = (tmp_6_reg_3631 | 16'd109);

assign tmp_228_fu_3090_p3 = {{48'd0}, {tmp_227_fu_3085_p2}};

assign tmp_229_fu_3099_p2 = (tmp_6_reg_3631 | 16'd110);

assign tmp_22_fu_1648_p3 = {{48'd0}, {tmp_21_fu_1643_p2}};

assign tmp_230_fu_3104_p3 = {{48'd0}, {tmp_229_fu_3099_p2}};

assign tmp_231_fu_3113_p2 = (tmp_6_reg_3631 | 16'd111);

assign tmp_232_fu_3118_p3 = {{48'd0}, {tmp_231_fu_3113_p2}};

assign tmp_233_fu_3127_p2 = (tmp_6_reg_3631 | 16'd112);

assign tmp_234_fu_3132_p3 = {{48'd0}, {tmp_233_fu_3127_p2}};

assign tmp_235_fu_3141_p2 = (tmp_6_reg_3631 | 16'd113);

assign tmp_236_fu_3146_p3 = {{48'd0}, {tmp_235_fu_3141_p2}};

assign tmp_237_fu_3155_p2 = (tmp_6_reg_3631 | 16'd114);

assign tmp_238_fu_3160_p3 = {{48'd0}, {tmp_237_fu_3155_p2}};

assign tmp_239_fu_3169_p2 = (tmp_6_reg_3631 | 16'd115);

assign tmp_23_fu_1657_p2 = (tmp_6_reg_3631 | 16'd7);

assign tmp_240_fu_3174_p3 = {{48'd0}, {tmp_239_fu_3169_p2}};

assign tmp_241_fu_3183_p2 = (tmp_6_reg_3631 | 16'd116);

assign tmp_242_fu_3188_p3 = {{48'd0}, {tmp_241_fu_3183_p2}};

assign tmp_243_fu_3197_p2 = (tmp_6_reg_3631 | 16'd117);

assign tmp_244_fu_3202_p3 = {{48'd0}, {tmp_243_fu_3197_p2}};

assign tmp_245_fu_3211_p2 = (tmp_6_reg_3631 | 16'd118);

assign tmp_246_fu_3216_p3 = {{48'd0}, {tmp_245_fu_3211_p2}};

assign tmp_247_fu_3225_p2 = (tmp_6_reg_3631 | 16'd119);

assign tmp_248_fu_3230_p3 = {{48'd0}, {tmp_247_fu_3225_p2}};

assign tmp_249_fu_3239_p2 = (tmp_6_reg_3631 | 16'd120);

assign tmp_24_fu_1662_p3 = {{48'd0}, {tmp_23_fu_1657_p2}};

assign tmp_250_fu_3244_p3 = {{48'd0}, {tmp_249_fu_3239_p2}};

assign tmp_251_fu_3253_p2 = (tmp_6_reg_3631 | 16'd121);

assign tmp_252_fu_3258_p3 = {{48'd0}, {tmp_251_fu_3253_p2}};

assign tmp_253_fu_3267_p2 = (tmp_6_reg_3631 | 16'd122);

assign tmp_254_fu_3272_p3 = {{48'd0}, {tmp_253_fu_3267_p2}};

assign tmp_255_fu_3281_p2 = (tmp_6_reg_3631 | 16'd123);

assign tmp_256_fu_3286_p3 = {{48'd0}, {tmp_255_fu_3281_p2}};

assign tmp_257_fu_3295_p2 = (tmp_6_reg_3631 | 16'd124);

assign tmp_258_fu_3300_p3 = {{48'd0}, {tmp_257_fu_3295_p2}};

assign tmp_259_fu_3309_p2 = (tmp_6_reg_3631 | 16'd125);

assign tmp_25_fu_1671_p2 = (tmp_6_reg_3631 | 16'd8);

assign tmp_260_fu_3314_p3 = {{48'd0}, {tmp_259_fu_3309_p2}};

assign tmp_261_fu_3323_p2 = (tmp_6_reg_3631 | 16'd126);

assign tmp_262_fu_3328_p3 = {{48'd0}, {tmp_261_fu_3323_p2}};

assign tmp_263_fu_3337_p2 = (tmp_6_reg_3631 | 16'd127);

assign tmp_264_fu_3342_p3 = {{48'd0}, {tmp_263_fu_3337_p2}};

assign tmp_265_fu_3351_p1 = tmp_V_reg_3604[15:0];

assign tmp_266_fu_3388_p4 = {{Input_1_V_V[15:8]}};

assign tmp_267_fu_3402_p1 = Input_1_V_V[7:0];

assign tmp_268_fu_3406_p3 = {{tmp_267_fu_3402_p1}, {7'd0}};

assign tmp_269_fu_3418_p2 = (tmp_271_cast_fu_3414_p1 + tmp_8_cast_fu_3398_p1);

assign tmp_26_fu_1676_p3 = {{48'd0}, {tmp_25_fu_1671_p2}};

assign tmp_270_fu_3458_p3 = ap_phi_mux_j_phi_fu_1503_p4[32'd7];

assign tmp_271_cast_fu_3414_p1 = tmp_268_fu_3406_p3;

assign tmp_271_fu_3482_p3 = {{tmp_11_mid2_v_fu_3474_p3}, {7'd0}};

assign tmp_272_cast_fu_3424_p1 = tmp_269_fu_3418_p2;

assign tmp_272_fu_3494_p1 = j_mid2_fu_3466_p3[6:0];

assign tmp_273_fu_3502_p2 = (tmp_274_cast_fu_3490_p1 + tmp_15_cast_fu_3498_p1);

assign tmp_274_cast_fu_3490_p1 = tmp_271_fu_3482_p3;

assign tmp_274_fu_3519_p3 = {{tmp_11_mid2_v_fu_3474_p3}, {tmp_16_s_fu_3513_p2}};

assign tmp_275_cast_fu_3508_p1 = tmp_273_fu_3502_p2;

assign tmp_275_fu_3527_p1 = tmp_274_fu_3519_p3;

assign tmp_276_fu_3537_p3 = {{tmp_11_mid2_v_reg_3802}, {tmp_16_1_fu_3532_p2}};

assign tmp_277_fu_3544_p1 = tmp_276_fu_3537_p3;

assign tmp_278_fu_3554_p3 = {{tmp_11_mid2_v_reg_3802}, {tmp_16_2_fu_3549_p2}};

assign tmp_279_fu_3561_p1 = tmp_278_fu_3554_p3;

assign tmp_27_fu_1685_p2 = (tmp_6_reg_3631 | 16'd9);

assign tmp_28_fu_1690_p3 = {{48'd0}, {tmp_27_fu_1685_p2}};

assign tmp_29_fu_1699_p2 = (tmp_6_reg_3631 | 16'd10);

assign tmp_2_fu_3429_p2 = (t_V_1_reg_3614 + 16'd1);

assign tmp_30_fu_1704_p3 = {{48'd0}, {tmp_29_fu_1699_p2}};

assign tmp_31_fu_1713_p2 = (tmp_6_reg_3631 | 16'd11);

assign tmp_32_fu_1718_p3 = {{48'd0}, {tmp_31_fu_1713_p2}};

assign tmp_33_fu_1727_p2 = (tmp_6_reg_3631 | 16'd12);

assign tmp_34_fu_1732_p3 = {{48'd0}, {tmp_33_fu_1727_p2}};

assign tmp_35_fu_1741_p2 = (tmp_6_reg_3631 | 16'd13);

assign tmp_36_fu_1746_p3 = {{48'd0}, {tmp_35_fu_1741_p2}};

assign tmp_37_fu_1755_p2 = (tmp_6_reg_3631 | 16'd14);

assign tmp_38_fu_1760_p3 = {{48'd0}, {tmp_37_fu_1755_p2}};

assign tmp_39_fu_1769_p2 = (tmp_6_reg_3631 | 16'd15);

assign tmp_3_fu_1525_p2 = (coloringFB_bot_m_in_s + 32'd1);

assign tmp_40_fu_1774_p3 = {{48'd0}, {tmp_39_fu_1769_p2}};

assign tmp_41_fu_1783_p2 = (tmp_6_reg_3631 | 16'd16);

assign tmp_42_fu_1788_p3 = {{48'd0}, {tmp_41_fu_1783_p2}};

assign tmp_43_fu_1797_p2 = (tmp_6_reg_3631 | 16'd17);

assign tmp_44_fu_1802_p3 = {{48'd0}, {tmp_43_fu_1797_p2}};

assign tmp_45_fu_1811_p2 = (tmp_6_reg_3631 | 16'd18);

assign tmp_46_fu_1816_p3 = {{48'd0}, {tmp_45_fu_1811_p2}};

assign tmp_47_fu_1825_p2 = (tmp_6_reg_3631 | 16'd19);

assign tmp_48_fu_1830_p3 = {{48'd0}, {tmp_47_fu_1825_p2}};

assign tmp_49_fu_1839_p2 = (tmp_6_reg_3631 | 16'd20);

assign tmp_4_fu_1541_p2 = ((counter_V == 16'd0) ? 1'b1 : 1'b0);

assign tmp_50_fu_1844_p3 = {{48'd0}, {tmp_49_fu_1839_p2}};

assign tmp_51_fu_1853_p2 = (tmp_6_reg_3631 | 16'd21);

assign tmp_52_fu_1858_p3 = {{48'd0}, {tmp_51_fu_1853_p2}};

assign tmp_53_fu_1867_p2 = (tmp_6_reg_3631 | 16'd22);

assign tmp_54_fu_1872_p3 = {{48'd0}, {tmp_53_fu_1867_p2}};

assign tmp_55_fu_1881_p2 = (tmp_6_reg_3631 | 16'd23);

assign tmp_56_fu_1886_p3 = {{48'd0}, {tmp_55_fu_1881_p2}};

assign tmp_57_fu_1895_p2 = (tmp_6_reg_3631 | 16'd24);

assign tmp_58_fu_1900_p3 = {{48'd0}, {tmp_57_fu_1895_p2}};

assign tmp_59_fu_1909_p2 = (tmp_6_reg_3631 | 16'd25);

assign tmp_5_fu_1547_p2 = ((t_V_reg_1446 == 9'd256) ? 1'b1 : 1'b0);

assign tmp_60_fu_1914_p3 = {{48'd0}, {tmp_59_fu_1909_p2}};

assign tmp_61_fu_1923_p2 = (tmp_6_reg_3631 | 16'd26);

assign tmp_62_fu_1928_p3 = {{48'd0}, {tmp_61_fu_1923_p2}};

assign tmp_63_fu_1937_p2 = (tmp_6_reg_3631 | 16'd27);

assign tmp_64_fu_1942_p3 = {{48'd0}, {tmp_63_fu_1937_p2}};

assign tmp_65_fu_1951_p2 = (tmp_6_reg_3631 | 16'd28);

assign tmp_66_fu_1956_p3 = {{48'd0}, {tmp_65_fu_1951_p2}};

assign tmp_67_fu_1965_p2 = (tmp_6_reg_3631 | 16'd29);

assign tmp_68_fu_1970_p3 = {{48'd0}, {tmp_67_fu_1965_p2}};

assign tmp_69_fu_1979_p2 = (tmp_6_reg_3631 | 16'd30);

assign tmp_6_fu_1559_p3 = {{t_V_reg_1446}, {7'd0}};

assign tmp_70_fu_1984_p3 = {{48'd0}, {tmp_69_fu_1979_p2}};

assign tmp_71_fu_1993_p2 = (tmp_6_reg_3631 | 16'd31);

assign tmp_72_fu_1998_p3 = {{48'd0}, {tmp_71_fu_1993_p2}};

assign tmp_73_fu_2007_p2 = (tmp_6_reg_3631 | 16'd32);

assign tmp_74_fu_2012_p3 = {{48'd0}, {tmp_73_fu_2007_p2}};

assign tmp_75_fu_2021_p2 = (tmp_6_reg_3631 | 16'd33);

assign tmp_76_fu_2026_p3 = {{48'd0}, {tmp_75_fu_2021_p2}};

assign tmp_77_fu_2035_p2 = (tmp_6_reg_3631 | 16'd34);

assign tmp_78_fu_2040_p3 = {{48'd0}, {tmp_77_fu_2035_p2}};

assign tmp_79_fu_2049_p2 = (tmp_6_reg_3631 | 16'd35);

assign tmp_7_fu_1567_p1 = tmp_6_fu_1559_p3;

assign tmp_80_fu_2054_p3 = {{48'd0}, {tmp_79_fu_2049_p2}};

assign tmp_81_fu_2063_p2 = (tmp_6_reg_3631 | 16'd36);

assign tmp_82_fu_2068_p3 = {{48'd0}, {tmp_81_fu_2063_p2}};

assign tmp_83_fu_2077_p2 = (tmp_6_reg_3631 | 16'd37);

assign tmp_84_fu_2082_p3 = {{48'd0}, {tmp_83_fu_2077_p2}};

assign tmp_85_fu_2091_p2 = (tmp_6_reg_3631 | 16'd38);

assign tmp_86_fu_2096_p3 = {{48'd0}, {tmp_85_fu_2091_p2}};

assign tmp_87_fu_2105_p2 = (tmp_6_reg_3631 | 16'd39);

assign tmp_88_fu_2110_p3 = {{48'd0}, {tmp_87_fu_2105_p2}};

assign tmp_89_fu_2119_p2 = (tmp_6_reg_3631 | 16'd40);

assign tmp_8_cast_fu_3398_p1 = tmp_266_fu_3388_p4;

assign tmp_8_fu_1572_p2 = (tmp_6_fu_1559_p3 | 16'd1);

assign tmp_90_fu_2124_p3 = {{48'd0}, {tmp_89_fu_2119_p2}};

assign tmp_91_fu_2133_p2 = (tmp_6_reg_3631 | 16'd41);

assign tmp_92_fu_2138_p3 = {{48'd0}, {tmp_91_fu_2133_p2}};

assign tmp_93_fu_2147_p2 = (tmp_6_reg_3631 | 16'd42);

assign tmp_94_fu_2152_p3 = {{48'd0}, {tmp_93_fu_2147_p2}};

assign tmp_95_fu_2161_p2 = (tmp_6_reg_3631 | 16'd43);

assign tmp_96_fu_2166_p3 = {{48'd0}, {tmp_95_fu_2161_p2}};

assign tmp_97_fu_2175_p2 = (tmp_6_reg_3631 | 16'd44);

assign tmp_98_fu_2180_p3 = {{48'd0}, {tmp_97_fu_2175_p2}};

assign tmp_99_fu_2189_p2 = (tmp_6_reg_3631 | 16'd45);

assign tmp_9_fu_3434_p2 = ((tmp_2_fu_3429_p2 == 16'd3192) ? 1'b1 : 1'b0);

assign tmp_s_fu_3365_p2 = (32'd1 + coloringFB_bot_m_in_2_reg_1457);

always @ (posedge ap_clk) begin
    tmp_6_reg_3631[6:0] <= 7'b0000000;
end

endmodule //coloringFB_bot_m
